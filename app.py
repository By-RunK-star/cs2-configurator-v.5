import pandas as pd
import streamlit as st

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ")

# üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã
@st.cache_data
def load_data():
    df = pd.read_csv("builds.csv")

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ ‚Üí –ø—Ä–∏–≤–æ–¥–∏–º –∫ –∫–∞–Ω–æ–Ω—É
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""  # –ø—É—Å—Ç–æ, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏
        return df

    df = ensure_col(df, "Game Settings", ["Game Settings", "Settings", "GameSettings"])
    df = ensure_col(df, "Launch Options", ["Launch Options", "Launch", "Params", "LaunchOptions"])
    df = ensure_col(df, "Control Panel", ["Control Panel", "ControlPanel", "Driver Settings", "Driver"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization", "Windows Optimizations", "Windows", "Windows Opt"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate", "FPS", "FPS Range", "Estimate"])
    df = ensure_col(df, "Source", ["Source"])

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º RAM
    if "RAM" in df.columns:
        df["RAM"] = (
            df["RAM"]
            .astype(str)
            .str.replace("GB", " –ì–ë", regex=False)
            .str.replace("  ", " ", regex=False)
            .str.strip()
        )

    return df


df = load_data()

# üöÄ –û—á–∏—Å—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—É—Å–∫–∞
def clean_launch_options(s: str) -> str:
    if not isinstance(s, str):
        return ""
    tokens = s.split()
    banned = {"-novid", "-nojoy"}  # –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏
    tokens = [t for t in tokens if t not in banned]
    cleaned = " ".join(tokens)
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned.strip()


# üñ• –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä CS2")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ —Å–≤–æ—é —Å–±–æ—Ä–∫—É (–∏–≥—Ä–∞, –¥—Ä–∞–π–≤–µ—Ä, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞, Windows-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏).")

# üîç –§–∏–ª—å—Ç—Ä—ã
cpu = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:", sorted(df["CPU"].dropna().unique()))
gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:", sorted(df["GPU"].dropna().unique()))
ram = st.selectbox("üíæ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:", sorted(df["RAM"].dropna().unique()))

# üîé –ü–æ–∏—Å–∫
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    result = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]

    st.markdown("---")

    if result.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ.")
    else:
        row = result.iloc[0].to_dict()
        launch_raw = row.get("Launch Options", "")
        launch_clean = clean_launch_options(launch_raw)

        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown(
            f"""
**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('CPU','')}
**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('GPU','')}
**üíæ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:** {row.get('RAM','')}

**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:**  
{row.get('Game Settings','')}

**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):**  
`{launch_clean}`

**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):**  
{row.get('Control Panel','')}

**ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):**  
{row.get('Windows Optimization','')}

**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {row.get('FPS Estimate','‚Äî')}
**üîó –ò—Å—Ç–æ—á–Ω–∏–∫:** {row.get('Source','')}
"""
        )

        # üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∫ txt
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n\n"
            f"[–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã]\n{row.get('Game Settings','')}\n\n"
            f"[–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞]\n{launch_clean}\n\n"
            f"[–ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞]\n{row.get('Control Panel','')}\n\n"
            f"[–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows]\n{row.get('Windows Optimization','')}\n\n"
            f"FPS: {row.get('FPS Estimate','‚Äî')}\n"
            f"–ò—Å—Ç–æ—á–Ω–∏–∫: {row.get('Source','')}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# üîÑ –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã
col_refresh, col_info = st.columns([1, 3])
with col_refresh:
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É"):
        st.cache_data.clear()
        st.rerun()

# --- –°–æ—Ü—Å–µ—Ç–∏ ---
st.markdown("---")
st.subheader("üåç –°–æ—Ü—Å–µ—Ç–∏")
st.markdown(
    """
    [üéÆ Twitch](https://m.twitch.tv/melevik/home)  
    [‚ñ∂Ô∏è YouTube](https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478)  
    [üéµ TikTok](https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1)  
    """,
    unsafe_allow_html=True,
)

# --- –î–æ–Ω–∞—Ç ---
st.markdown("---")
st.subheader("üíñ –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç")
st.markdown("üëâ [üí∏ DonatPay](https://www.donationalerts.com/r/melevik)", unsafe_allow_html=True)
st.caption("–ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–µ–∫—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ üôå")




