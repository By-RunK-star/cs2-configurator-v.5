import os
import re
import pandas as pd
import streamlit as st

# ---------- –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ----------
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="wide")

# ---------- —Å—Ç–∏–ª–∏ (–∞–∫–∫—É—Ä–∞—Ç–Ω—ã–µ, –±–µ–∑ –ª–∏—à–Ω–µ–π –≤—ã—á—É—Ä–Ω–æ—Å—Ç–∏) ----------
st.markdown("""
<style>
/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ —Ç—ë–º–Ω–æ–º —Ñ–æ–Ω–µ */
.reco-card {
  background: #0E1117;
  border: 1px solid #30363d;
  border-radius: 10px;
  padding: 18px 18px 6px 18px;
  margin-top: 8px;
  color: #E6EDF3;
}

/* –ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π –∂—ë–ª—Ç—ã–π –±–ª–æ–∫ –¥–æ–Ω–∞—Ç–∞ (–Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ) */
.donate-pulse {
  background: linear-gradient(90deg, #FFDD55, #FFC300, #FFDD55);
  background-size: 200% 200%;
  animation: pulseGlow 3s ease-in-out infinite;
  border: 1px solid #856404;
  border-radius: 10px;
  padding: 14px 16px;
  color: #111;
  font-weight: 600;
}
@keyframes pulseGlow {
  0%   { background-position: 0% 50%;   box-shadow: 0 0 0px rgba(255,195,0,0.25); }
  50%  { background-position: 100% 50%; box-shadow: 0 0 14px rgba(255,195,0,0.35); }
  100% { background-position: 0% 50%;   box-shadow: 0 0 0px rgba(255,195,0,0.25); }
}

/* –°–æ—Ü. –∫–Ω–æ–ø–∫–∏ –≤ —Ü–≤–µ—Ç–∞—Ö –ø–ª–æ—â–∞–¥–æ–∫ */
.social-row { display:flex; gap:10px; flex-wrap:wrap; margin-top:8px; }
.btn-social {
  border-radius: 8px; padding: 10px 14px; text-decoration:none; font-weight:700;
  display:inline-flex; align-items:center; gap:8px; color:#fff;
}
.btn-yt    { background:#FF0000; }
.btn-twitch{ background:#9146FF; }
.btn-tt    { background:#111; border:1px solid #222; }
.btn-tt span { background: linear-gradient(90deg,#69C9D0,#EE1D52); -webkit-background-clip:text; color: transparent; }

/* –ù–µ–±–æ–ª—å—à–æ–π —Å–µ—Ä—ã–π –¥–∏—Å–∫–ª–µ–π–º–µ—Ä/–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */
.warn {
  background:#161B22; border:1px solid #30363d; color:#C9D1D9;
  border-radius:10px; padding:12px 14px; margin-top:8px;
}
.warn b { color:#FFD166; }
</style>
""", unsafe_allow_html=True)

# ---------- —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ----------

def try_read_base():
    """–ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –±–∞–∑—É –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É: gz ‚Üí csv ‚Üí full.csv"""
    candidates = [
        "builds_site_ready.csv.gz",
        "builds.csv",
        "builds_full.csv",
    ]
    last_err = None
    for path in candidates:
        if os.path.exists(path):
            try:
                return pd.read_csv(path, compression="infer")
            except Exception as e:
                last_err = e
    # –µ—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–ª–æ—Å—å
    if last_err:
        raise last_err
    raise FileNotFoundError("–ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω —Ñ–∞–π–ª –±–∞–∑—ã: builds_site_ready.csv.gz / builds.csv / builds_full.csv")

def canonicalize_columns(df: pd.DataFrame) -> pd.DataFrame:
    """
    –ü—Ä–∏–≤–æ–¥–∏–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–ª–æ–Ω–æ–∫ –∫ –∫–∞–Ω–æ–Ω—É.
    –ö–∞–Ω–æ–Ω: cpu, gpu, ram, game_settings, launch_options, control_panel, windows_optimization, fps_estimate, source
    + display_cpu/gpu/ram –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞.
    """
    # –∫–∞—Ä—Ç–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ -> –∫–∞–Ω–æ–Ω
    variants = {
        "cpu": ["cpu", "CPU", "Cpu", "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", "processor", "Processor", "CPU Model", "CPU_Name"],
        "gpu": ["gpu", "GPU", "Gpu", "–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", "graphics", "Graphics", "GPU Model", "GPU_Name"],
        "ram": ["ram", "RAM", "Ram", "–û–ó–£", "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å", "memory", "Memory", "RAM (GB)"],
        "game_settings": ["Game Settings", "Settings", "GameSettings", "–ò–≥—Ä–∞", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã"],
        "launch_options": ["Launch Options", "Launch", "Params", "LaunchOptions", "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞"],
        "control_panel": ["Control Panel", "ControlPanel", "Driver Settings", "Driver", "–ü–∞–Ω–µ–ª—å", "–ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞"],
        "windows_optimization": ["Windows Optimization", "Windows Optimizations", "Windows", "Windows Opt", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows"],
        "fps_estimate": ["FPS Estimate", "FPS", "FPS Range", "Estimate", "–û–∂–∏–¥–∞–µ–º—ã–π FPS"],
        "source": ["Source", "–ò—Å—Ç–æ—á–Ω–∏–∫"]
    }

    out = pd.DataFrame()
    # –ø–µ—Ä–µ–Ω–æ—Å–∏–º "–∫–∞–∫ –µ—Å—Ç—å" ‚Äî –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for col in df.columns:
        out[col] = df[col]

    # —Å–æ–∑–¥–∞—ë–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–µ
    def first_match(cols):
        for c in cols:
            if c in df.columns:
                return df[c]
        return None

    for canon, names in variants.items():
        m = first_match(names)
        if m is None:
            out[canon] = ""
        else:
            out[canon] = m.astype(str)

    # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º RAM: 16 -> "16 GB", "16GB" -> "16 GB"
    def norm_ram(x: str) -> str:
        s = str(x).strip()
        m = re.search(r"(\d+)", s)
        if not m:
            return s
        num = m.group(1)
        return f"{int(num)} GB"
    out["ram"] = out["ram"].apply(norm_ram)

    # —Å–æ—Ö—Ä–∞–Ω–∏–º display_* (–æ—Ä–∏–≥–∏–Ω–∞–ª, –Ω–æ –æ—á–∏—â–µ–Ω–Ω—ã–π –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã)
    out["display_cpu"] = out["cpu"].astype(str).str.strip()
    out["display_gpu"] = out["gpu"].astype(str).str.strip()
    out["display_ram"] = out["ram"].astype(str).str.strip()

    # –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
    def key_norm(s: str) -> str:
        return re.sub(r"\s+", "", str(s).lower())

    out["cpu_key"] = out["cpu"].apply(key_norm)
    out["gpu_key"] = out["gpu"].apply(key_norm)
    out["ram_key"] = out["ram"].apply(key_norm)

    # —É–¥–∞–ª–∏–º –æ—á–µ–≤–∏–¥–Ω—ã–µ –ø—É—Å—Ç—ã–µ CPU/GPU/RAM
    out = out[(out["display_cpu"] != "") & (out["display_gpu"] != "") & (out["display_ram"] != "")]
    out = out.drop_duplicates(subset=["cpu_key", "gpu_key", "ram_key"]).reset_index(drop=True)
    return out

@st.cache_data
def load_data():
    df = try_read_base()
    return canonicalize_columns(df)

def clean_launch_options(s: str) -> str:
    """–£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ –¥–ª—è CS2 –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã"""
    if not isinstance(s, str):
        return ""
    tokens = s.split()
    banned = {"-novid", "-nojoy"}  # –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –∏—Å–∫–ª—é—á–∞—Ç—å
    tokens = [t for t in tokens if t not in banned]
    cleaned = " ".join(tokens)
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned.strip()

def ram_sort_key(val: str):
    m = re.search(r"(\d+)", str(val))
    return int(m.group(1)) if m else 0

# ---------- –∑–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã ----------
try:
    df = load_data()
except Exception as e:
    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É: {e}")
    st.stop()

# ---------- –∑–∞–≥–æ–ª–æ–≤–æ–∫ ----------
st.title("‚öôÔ∏è CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä (–æ–Ω–ª–∞–π–Ω)")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –∏ –±–∞–∑–æ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows. "
           "–ü–æ–∏—Å–∫ —É—Å—Ç–æ–π—á–∏–≤ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É/–ø—Ä–æ–±–µ–ª–∞–º –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è.")

# ---------- –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Å–ª–µ–≤–∞) ----------
col_left, col_right = st.columns([1, 2.2])

with col_left:
    # —Å–µ–ª–µ–∫—Ç—ã –∏–∑ ¬´–∫—Ä–∞—Å–∏–≤—ã—Ö¬ª –∫–æ–ª–æ–Ω–æ–∫
    cpu_choice = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", sorted(df["display_cpu"].unique()))
    gpu_choice = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", sorted(df["display_gpu"].unique()))
    ram_choice = st.selectbox("üíæ –û–ó–£", sorted(df["display_ram"].unique(), key=ram_sort_key))

    # –∫–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
    find = st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", use_container_width=True)

    # –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã (–±–µ–∑ –ø–∞–¥–µ–Ω–∏—è)
    if st.button("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É", use_container_width=True):
        st.cache_data.clear()
        st.success("–ë–∞–∑–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–¥—Ç—è–Ω—É—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ–∏—Å–∫–µ/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ.")

with col_right:
    st.markdown("""
<div class="donate-pulse">
  üíõ –ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ (–≤ —Ç–∏—Ç—Ä—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏)!
  <br>üëâ <a href="https://www.donationalerts.com/r/melevik" target="_blank" style="color:#111; text-decoration:underline;">–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ DonatPay / DonationAlerts</a>
</div>
""", unsafe_allow_html=True)

    # –°–æ—Ü. –±–ª–æ–∫ ‚Äî —Ü–≤–µ—Ç–∞ –ø–ª–æ—â–∞–¥–æ–∫, –∫–∞–∫ –ø—Ä–æ—Å–∏–ª–∏
    st.markdown("""
<div class="social-row">
  <a class="btn-social btn-tt" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">
    <span>TikTok</span>
  </a>
  <a class="btn-social btn-yt" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">
    YouTube
  </a>
  <a class="btn-social btn-twitch" href="https://m.twitch.tv/melevik/home" target="_blank">
    Twitch
  </a>
</div>
""", unsafe_allow_html=True)

# ---------- –∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã —Å Twitch/YouTube ----------
with st.expander("üé• Twitch ‚Äî –ø—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è (–µ—Å–ª–∏ –∏–¥—ë—Ç)"):
    st.markdown(
        """
<iframe
  src="https://player.twitch.tv/?channel=melevik&parent=share.streamlit.io&parent=streamlit.app"
  height="378" width="620" allowfullscreen="true" frameborder="0">
</iframe>
<p style="color:#8b949e;font-size:12px">
–ï—Å–ª–∏ –æ–∫–Ω–æ –ø—É—Å—Ç–æ–µ ‚Äî —Å—Ç—Ä–∏–º —Å–µ–π—á–∞—Å –æ—Ñ–ª–∞–π–Ω.
</p>
""",
        unsafe_allow_html=True
    )

with st.expander("üì∫ YouTube ‚Äî –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–µ–æ (–Ω–µ —à–æ—Ä—Ç—Å)"):
    # —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –≤—Å—Ç—Ä–æ–π–∫–∞ (–º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å ID –Ω–∞ –Ω—É–∂–Ω—ã–π —Ä–æ–ª–∏–∫/–ø–ª–µ–π–ª–∏—Å—Ç)
    st.markdown(
        """
<iframe width="620" height="349"
src="https://www.youtube.com/embed?listType=user_uploads&list=melevik-avlaron"
title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
allowfullscreen></iframe>
<p style="color:#8b949e;font-size:12px">
YouTube –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ ‚Äî –∑–∞–º–µ–Ω–∏ –Ω–∞ –Ω—É–∂–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç/ID, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–æ–ª–∏–∫.
</p>
""",
        unsafe_allow_html=True
    )

st.markdown("---")

# ---------- –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ ----------
def key_norm(s: str) -> str:
    return re.sub(r"\s+", "", str(s).lower())

if find:
    # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–∞–±–ª–∏—Ü—É
    cpu_k = key_norm(cpu_choice)
    gpu_k = key_norm(gpu_choice)
    ram_k = key_norm(ram_choice)

    # –±–∞–∑–æ–≤—ã–π —Ç–æ—á–Ω—ã–π –º–∞—Ç—á –ø–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –∫–ª—é—á–∞–º
    res = df[(df["cpu_key"] == cpu_k) & (df["gpu_key"] == gpu_k) & (df["ram_key"] == ram_k)]

    # –µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º –º—è–≥—á–µ: CPU/GPU —Ç–æ—á–Ω—ã–µ, RAM —Ç–æ–ª—å–∫–æ –ø–æ —á–∏—Å–ª—É
    if res.empty:
        ram_num = re.search(r"(\d+)", ram_choice)
        if ram_num:
            rn = int(ram_num.group(1))
            res = df[(df["cpu_key"] == cpu_k) & (df["gpu_key"] == gpu_k) & (df["display_ram"].str.contains(str(rn)))]
    # –µ—Å–ª–∏ –≤—Å—ë –µ—â—ë –ø—É—Å—Ç–æ ‚Äî –æ—Å—Ç–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    st.markdown("---")
    if res.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –≤ –±–∞–∑–µ –µ—Å—Ç—å —Ä–æ–≤–Ω–æ —Ç–∞–∫–∞—è —Å–≤—è–∑–∫–∞ CPU/GPU/RAM.")
    else:
        row = res.iloc[0].copy()

        # –æ—á–∏—Å—Ç–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞
        launch_raw = row.get("launch_options", "")
        launch_clean = clean_launch_options(launch_raw)

        # –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        st.markdown('<div class="reco-card">', unsafe_allow_html=True)
        st.markdown(f"### ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown(f"**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('display_cpu','')}")
        st.markdown(f"**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('display_gpu','')}")
        st.markdown(f"**üíæ –û–ó–£:** {row.get('display_ram','')}")

        # –±–ª–æ–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        st.markdown("**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:**")
        st.write(row.get("game_settings", ""))

        st.markdown("**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):**")
        st.code(launch_clean or "‚Äî", language="bash")

        st.markdown("**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):**")
        st.write(row.get("control_panel", ""))

        st.markdown("**ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):**")
        st.write(row.get("windows_optimization", ""))

        # –æ—Ü–µ–Ω–∫–∞ FPS/–∏—Å—Ç–æ—á–Ω–∏–∫
        fps_txt = row.get("fps_estimate", "‚Äî")
        src_txt = row.get("source", "")
        st.markdown(f"**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {fps_txt}")
        st.markdown(f"**üîó –ò—Å—Ç–æ—á–Ω–∏–∫:** {src_txt if src_txt else '‚Äî'}")

        # RAM –∫–∞–Ω–∞–ª ‚Äî –æ–±—â–∏–π –¥–∏—Å–∫–ª–µ–π–º–µ—Ä (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤)
        st.markdown("""
<div class="warn">
<b>–í–∞–∂–Ω–æ –ø—Ä–æ –û–ó–£:</b> –≤ –æ–¥–Ω–æ–∫–∞–Ω–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ FPS –æ–±—ã—á–Ω–æ –Ω–∏–∂–µ –∏ —á–∞—â–µ –±—ã–≤–∞—é—Ç –º–∏–∫—Ä–æ—Ñ—Ä–∏–∑—ã. 
–î–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ª—É—á—à–µ–≥–æ —Ñ—Ä–µ–π–º—Ç–∞–π–º–∞ —Å—Ç–∞–≤—å—Ç–µ –ø–∞–º—è—Ç—å <b>–¥–≤—É—Ö–∫–∞–Ω–∞–ª–æ–º</b> (2√ó8, 2√ó16 –∏ —Ç. –ø.).
</div>
""", unsafe_allow_html=True)

        # –ü—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏—è –ø–æ ¬´–æ–ø–∞—Å–Ω—ã–º¬ª –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Ç—É–º–±–ª–µ—Ä–∞–º
        st.markdown("""
<div class="warn">
<b>–ù–µ –≤–∫–ª—é—á–∞–π—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –≤ –¥—Ä–∞–π–≤–µ—Ä–µ (–¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å <i>—Ç–æ–ª—å–∫–æ</i> –¥–ª—è CS2):</b><br>
‚Ä¢ <b>NVIDIA</b>: ¬´–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª ‚Äî –≤–∫–ª—é—á–∞–π—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏–≥—Ä—ã, –Ω–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º! –ò–Ω–∞—á–µ –∫–∞—Ä—Ç–∞ –º–æ–∂–µ—Ç –¥–µ—Ä–∂–∞—Ç—å —á–∞—Å—Ç–æ—Ç—ã –¥–∞–∂–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ. <br>
‚Ä¢ <b>AMD</b>: Anti-Lag/Anti-Lag+ –∏ Radeon Boost –Ω–µ –≤–∫–ª—é—á–∞–π—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω–æ ‚Äî —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ CS2, –∏–Ω–∞—á–µ –≤–æ–∑–º–æ–∂–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å. <br>
‚Ä¢ <b>Intel</b>: –†–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è ¬´–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª –≤–∫–ª—é—á–∞–π—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –∞ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–æ (–æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ –Ω–æ—É—Ç–±—É–∫–∞—Ö).
</div>
""", unsafe_allow_html=True)

        # —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        profile_txt = (
            f"CPU: {row.get('display_cpu','')}\n"
            f"GPU: {row.get('display_gpu','')}\n"
            f"RAM: {row.get('display_ram','')}\n\n"
            f"[Game Settings]\n{row.get('game_settings','')}\n\n"
            f"[Launch Options]\n{launch_clean}\n\n"
            f"[Control Panel]\n{row.get('control_panel','')}\n\n"
            f"[Windows Optimization]\n{row.get('windows_optimization','')}\n\n"
            f"FPS Estimate: {fps_txt}\n"
            f"Source: {src_txt}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")
        st.markdown("</div>", unsafe_allow_html=True)  # /reco-card

# ---------- —Ñ—É—Ç–µ—Ä ----------
st.markdown("---")
st.caption("–û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É —Ä–µ–≥—É–ª—è—Ä–Ω–æ. –ï—Å–ª–∏ —É —Ç–µ–±—è —Ä–µ–¥–∫–∞—è —Å–≤—è–∑–∫–∞ ‚Äî –Ω–∞–ø–∏—à–∏ –Ω–∞ YouTube, –¥–æ–±–∞–≤–∏–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –∞–ø–¥–µ–π—Ç–µ.")
