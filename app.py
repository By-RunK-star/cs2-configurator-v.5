import pandas as pd
import streamlit as st

# ‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="centered")

# üé® –ì–ª–æ–±–∞–ª—å–Ω—ã–π CSS (—Å–æ—Ü–∫–Ω–æ–ø–∫–∏ + –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–Ω–∞—Ç)
st.markdown("""
<style>
/* –û–±—â–∏–µ –º–µ–ª–æ—á–∏ */
hr {border:0; height:1px; background:linear-gradient(90deg,transparent,#333,transparent);}

/* –°–æ—Ü-–ø–ª–∞—à–∫–∏ */
.btn-row {display:flex; gap:12px; flex-wrap:wrap; margin:6px 0 18px 0;}
a.social-btn {
  display:inline-block; padding:10px 14px; border-radius:12px; text-decoration:none;
  color:#fff; font-weight:700; border:0; box-shadow:0 4px 12px rgba(0,0,0,.2);
}
a.social-btn:hover {filter:brightness(1.05)}
.social-youtube {background:#ff0000;}
.social-twitch  {background:#6441a5;}
.social-tiktok  {background:linear-gradient(90deg,#25F4EE,#FE2C55);}
.social-donate  {background:#0ea5e9;}

/* üî• DONATE: –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫ */
.cta-box {
  position: relative;
  padding: 22px 18px;
  border-radius: 16px;
  color: #fff;
  text-align: center;
  font-weight: 800;
  box-shadow: 0 10px 22px rgba(0,0,0,.35);
  margin: 18px 0 8px 0;

  /* –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø–µ—Ä–µ–ª–∏–≤ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ */
  background: linear-gradient(270deg, #ff4b1f, #ff9068, #ff4b1f);
  background-size: 300% 300%;
  animation: ctaGradient 9s ease infinite;
}
@keyframes ctaGradient {
  0%   {background-position: 0% 50%;}
  50%  {background-position: 100% 50%;}
  100% {background-position: 0% 50%;}
}

/* –ø—É–ª—å—Å –≤–æ–∫—Ä—É–≥ –±–ª–æ–∫–∞ */
.cta-box::after{
  content:'';
  position:absolute; inset:-4px;
  border-radius: 18px;
  background: radial-gradient(ellipse at center, rgba(255,255,255,.12), rgba(255,255,255,0));
  filter: blur(6px);
  animation: breathe 3.5s ease-in-out infinite;
  z-index:0;
}
@keyframes breathe {
  0%,100%{opacity:.35}
  50%{opacity:.7}
}

/* –¢–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä—Ö */
.cta-inner{position:relative; z-index:2;}
.cta-title{font-size:22px; line-height:1.25; margin:0 0 10px 0;}
.cta-sub{font-size:14px; font-weight:700; opacity:.95; margin-bottom:14px;}

/* –ö–Ω–æ–ø–∫–∞ –¥–æ–Ω–∞—Ç–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø—É–ª—å—Å–∞ */
a.cta-btn {
  display:inline-block;
  background:#fff;
  color:#ff4b1f;
  font-weight:900;
  font-size:18px;
  padding:10px 22px;
  border-radius:12px;
  text-decoration:none;
  box-shadow:0 6px 16px rgba(0,0,0,.35);
  transition: transform .15s ease, box-shadow .15s ease;
  animation: btnPulse 1.6s ease-in-out infinite;
}
a.cta-btn:hover {transform: translateY(-1px); box-shadow:0 10px 18px rgba(0,0,0,.4);}
@keyframes btnPulse{
  0%,100% {transform: scale(1.0)}
  50%     {transform: scale(1.04)}
}

/* –ú–∏–≥–∞—é—â–∞—è –∫–∞–ø–ª—è –≤–Ω–∏–º–∞–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ */
.blink {animation: blink 1s step-start infinite;}
@keyframes blink {50%{opacity:.45}}
</style>
""", unsafe_allow_html=True)

# üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º builds.csv)
@st.cache_data
def load_data():
    df = pd.read_csv("builds.csv")

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ –∫ –∫–∞–Ω–æ–Ω—É
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df = ensure_col(df, "Game Settings", ["Game Settings", "Settings", "GameSettings"])
    df = ensure_col(df, "Launch Options", ["Launch Options", "Launch", "Params", "LaunchOptions"])
    df = ensure_col(df, "Control Panel", ["Control Panel", "ControlPanel", "Driver Settings", "Driver"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization", "Windows Optimizations", "Windows", "Windows Opt"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate", "FPS", "FPS Range", "Estimate"])
    df = ensure_col(df, "Source", ["Source"])

    # RAM ‚Üí –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    if "RAM" in df.columns:
        df["RAM"] = (
            df["RAM"].astype(str)
            .str.replace("GB", " –ì–ë", regex=False)
            .str.replace("  ", " ", regex=False)
            .str.strip()
        )
    return df

df = load_data()

# üö´ –ß–∏—Å—Ç–∏–º -novid/-nojoy (–º—ã —ç—Ç–æ —Å—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–µ–º –ø–æ —Ç–≤–æ–µ–º—É –¢–ó)
def clean_launch_options(s: str) -> str:
    if not isinstance(s, str):
        return ""
    tokens = s.split()
    banned = {"-novid", "-nojoy"}  # —É–±–∏—Ä–∞–µ–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–ª—è CS2
    tokens = [t for t in tokens if t not in banned]
    cleaned = " ".join(tokens)
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned.strip()

# üß≠ –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä CS2")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ —Å–≤–æ—é —Å–±–æ—Ä–∫—É: –≥—Ä–∞—Ñ–∏–∫–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows.")

# üîç –§–∏–ª—å—Ç—Ä—ã
left, right = st.columns([2,1])
with left:
    cpu = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", sorted(df["CPU"].dropna().unique()))
    gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", sorted(df["GPU"].dropna().unique()))
with right:
    ram = st.selectbox("üíæ –û–ó–£", sorted(df["RAM"].dropna().unique()))

# üîé –ü–æ–∏—Å–∫
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    result = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]
    st.markdown("<hr/>", unsafe_allow_html=True)

    if result.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ.")
    else:
        row = result.iloc[0].to_dict()
        launch_clean = clean_launch_options(row.get("Launch Options", ""))

        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown(
            f"""
**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('CPU','')}  
**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('GPU','')}  
**üíæ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:** {row.get('RAM','')}

**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:**  
{row.get('Game Settings','')}

**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):**  
`{launch_clean}`

**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):**  
{row.get('Control Panel','')}

**ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):**  
{row.get('Windows Optimization','')}

**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {row.get('FPS Estimate','‚Äî')}  
**üîó –ò—Å—Ç–æ—á–Ω–∏–∫:** {row.get('Source','')}
"""
        )

        # üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∫ .txt
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n\n"
            f"[–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã]\n{row.get('Game Settings','')}\n\n"
            f"[–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞]\n{launch_clean}\n\n"
            f"[–ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞]\n{row.get('Control Panel','')}\n\n"
            f"[–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows]\n{row.get('Windows Optimization','')}\n\n"
            f"FPS: {row.get('FPS Estimate','‚Äî')}\n"
            f"–ò—Å—Ç–æ—á–Ω–∏–∫: {row.get('Source','')}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã (–ø–æ —Ç–≤–æ–µ–π –ø—Ä–æ—Å—å–±–µ ‚Äî –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è)
col_refresh, col_spacer = st.columns([1,3])
with col_refresh:
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É"):
        st.cache_data.clear()
        st.rerun()

# üåç –°–æ—Ü—Å–µ—Ç–∏ ‚Äî –ö–ù–û–ü–ö–ò
st.markdown("<hr/>", unsafe_allow_html=True)
st.subheader("üåç –°–æ—Ü—Å–µ—Ç–∏")
st.markdown(
    """
<div class="btn-row">
  <a class="social-btn social-tiktok" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">üéµ TikTok</a>
  <a class="social-btn social-youtube" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">‚ñ∂Ô∏è YouTube</a>
  <a class="social-btn social-twitch" href="https://m.twitch.tv/melevik/home" target="_blank">üéÆ Twitch</a>
</div>
""",
    unsafe_allow_html=True
)

# üíñ –î–æ–Ω–∞—Ç ‚Äî –Ø–†–ö–ò–ô, –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–ô CTA
st.markdown("<hr/>", unsafe_allow_html=True)
st.subheader("üíñ –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç")

st.markdown(
    """
<div class="cta-box">
  <div class="cta-inner">
    <div class="cta-title">üî• <span class="blink">–í–Ω–∏–º–∞–Ω–∏–µ!</span> –ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–µ–∫—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ <u>—Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫</u>!</div>
    <div class="cta-sub">–¢–≤–æ—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —É—Å–∫–æ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–±–æ—Ä–æ–∫ üôå</div>
    <a class="cta-btn" href="https://www.donationalerts.com/r/melevik" target="_blank">üí∏ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ DonatPay</a>
  </div>
</div>
""",
    unsafe_allow_html=True
)
