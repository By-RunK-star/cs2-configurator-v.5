import re
import io
import pandas as pd
import streamlit as st

# ============= –ù–ê–°–¢–†–û–ô–ö–ò –ò –°–¢–ò–õ–ò =============
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="centered")

st.markdown("""
<style>
/* –°–æ—Ü-–∫–Ω–æ–ø–∫–∏ */
.badge-row { display:flex; gap:10px; flex-wrap:wrap; margin-top:6px; }
.badge {
  text-decoration:none; padding:8px 12px; border-radius:10px;
  font-weight:700; border:1px solid rgba(255,255,255,0.18);
  display:inline-flex; align-items:center; gap:8px;
}
.badge:hover { filter:brightness(1.08); }
.badge-yt { background:#FF0000; color:#fff; }
.badge-tt { background:#111; color:#fff; }
.badge-tw { background:#9146FF; color:#fff; }

/* –ú—è–≥–∫–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –¥–æ–Ω–∞—Ç-–±–ª–æ–∫–∞ */
.donate-box {
  border:1px solid rgba(255,255,255,0.14);
  border-radius:12px; padding:14px;
  background:rgba(255,255,255,0.04);
  margin:14px 0;
  animation:pulse 2.8s ease-in-out infinite;
}
@keyframes pulse {
  0%   { box-shadow:0 0 0 0 rgba(255,215,0,0.0); }
  50%  { box-shadow:0 0 20px 2px rgba(255,215,0,0.16); }
  100% { box-shadow:0 0 0 0 rgba(255,215,0,0.0); }
}

/* –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–µ –±–ª–æ–∫–∏-–∫–æ–¥—ã */
.code-wrap {
  border:1px solid rgba(255,255,255,0.12);
  border-radius:8px; padding:10px 12px;
  background:rgba(255,255,255,0.03);
  white-space:pre-wrap;
}

/* –ú–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ */
.small-note { opacity:0.85; font-size:0.92rem; }

/* –ò–∫–æ–Ω–∫–∏-–º–µ—Ç–∫–∏ —Å–ª–µ–≤–∞ –æ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
.hicon { opacity:0.9; margin-right:6px; }
</style>
""", unsafe_allow_html=True)

# ============= –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• =============
@st.cache_data
def load_data():
    df = pd.read_csv("builds.csv")

    # –ö–∞–Ω–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å—Ç–æ–ª–±—Ü—ã, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª–æ, –µ—Å–ª–∏ –∏–º–µ–Ω–∞ —Å–ª–µ–≥–∫–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df = ensure_col(df, "CPU", ["CPU"])
    df = ensure_col(df, "GPU", ["GPU"])
    df = ensure_col(df, "RAM", ["RAM"])
    df = ensure_col(df, "Game Settings", ["Game Settings","Settings"])
    df = ensure_col(df, "Launch Options", ["Launch Options","Params","Launch"])
    df = ensure_col(df, "Control Panel", ["Control Panel","Driver","Driver Settings"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization","Windows"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate","FPS","Estimate"])
    df = ensure_col(df, "Source", ["Source"])

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º RAM (8 GB / 16 GB ‚Ä¶)
    df["RAM"] = df["RAM"].astype(str)\
        .str.replace("GB", " GB", regex=False)\
        .str.replace("  "," ", regex=False).str.strip()
    return df

df = load_data()

# ============= –•–ï–õ–ü–ï–†–´ =============
BANNED_FLAGS = {"-novid", "-nojoy"}  # —É–±–∏—Ä–∞–µ–º –∏–∑ –∑–∞–ø—É—Å–∫–∞

def clean_launch_options(s: str) -> str:
    if not isinstance(s, str):
        return ""
    toks = s.split()
    toks = [t for t in toks if t not in BANNED_FLAGS]
    cleaned = " ".join(toks).strip()
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned

def reduce_fps_text(fps_text: str, ratio: float = 0.85) -> str:
    """
    –ü–æ–Ω–∏–∂–∞–µ–º FPS, –µ—Å–ª–∏ –æ–¥–Ω–æ–∫–∞–Ω–∞–ª. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç "250‚Äì300", "~280", "280".
    –ï—Å–ª–∏ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –Ω–µ–ª—å–∑—è ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç.
    """
    s = str(fps_text)
    nums = list(map(int, re.findall(r"\d+", s)))
    if not nums:
        return s
    if "‚Äì" in s or "-" in s:
        # –¥–∏–∞–ø–∞–∑–æ–Ω
        if len(nums) >= 2:
            a, b = nums[0], nums[1]
            a2 = max(1, int(a * ratio))
            b2 = max(1, int(b * ratio))
            return f"{a2}‚Äì{b2}"
    # –æ–¥–∏–Ω–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    n2 = max(1, int(nums[0] * ratio))
    return f"~{n2}"

def add_single_channel_tips(text: str) -> str:
    """
    –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Å–æ–≤–µ—Ç –¥–ª—è 1 –∫–∞–Ω–∞–ª–∞.
    """
    tip = "\n\n‚Ä¢ –û–¥–Ω–æ–∫–∞–Ω–∞–ª: –æ–∂–∏–¥–∞–π -10‚Äì25% FPS. –î–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏: —Å–Ω–∏–∑–∏—Ç—å MSAA/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é, —É–±—Ä–∞—Ç—å —Ç–µ–Ω–∏ –Ω–∞ ¬´–ù–∏–∑–∫–æ¬ª, –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å FPS (~90‚Äì95% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ)."
    t = (text or "").strip()
    return (t + tip) if t else tip

def looks_dangerous_nvidia(cp_text: str) -> bool:
    """
    –ï—Å–ª–∏ –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –ø–∞–Ω–µ–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è ¬´–º–∞–∫—Å. –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª ‚Äî –ø–æ–¥—Å–≤–µ—Ç–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
    """
    s = (cp_text or "").lower()
    return ("–º–∞–∫—Å" in s and "–ø—Ä–æ–∏–∑–≤–æ–¥" in s) or ("prefer maximum" in s and "performance" in s)

@st.cache_data
def augment_with_ram_channel(_df: pd.DataFrame) -> pd.DataFrame:
    """
    –î–µ–ª–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –±–∞–∑—É —Å –∫–æ–ª–æ–Ω–∫–æ–π RAM Channel –∏ –¥—É–±–ª–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏: Dual / Single.
    –í Single —Å–Ω–∏–∂–∞–µ–º FPS, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É.
    """
    rows = []
    for _, r in _df.iterrows():
        base = dict(r)

        # Dual
        dual = dict(base)
        dual["RAM Channel"] = "Dual"
        rows.append(dual)

        # Single ‚Äî FPS –Ω–∏–∂–µ + —Å–æ–≤–µ—Ç—ã –≤ game settings/windows
        single = dict(base)
        single["RAM Channel"] = "Single"

        # FPS
        single["FPS Estimate"] = reduce_fps_text(single.get("FPS Estimate", ""), 0.85)

        # Game settings & Windows optimization –¥–æ–ø–æ–ª–Ω–∏–º —Å–æ–≤–µ—Ç–∞–º–∏
        single["Game Settings"] = add_single_channel_tips(single.get("Game Settings", ""))
        win_opt = single.get("Windows Optimization", "")
        win_tip = "‚Ä¢ –î–æ–±–∞–≤—å –≤—Ç–æ—Ä—É—é –ø–ª–∞–Ω–∫—É –û–ó–£ ‚Üí –¥–≤—É—Ö–∫–∞–Ω–∞–ª –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –¥–∞—ë—Ç –æ—â—É—Ç–∏–º—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –≤ CS2."
        single["Windows Optimization"] = (win_opt + ("\n\n" if win_opt else "") + win_tip)

        rows.append(single)

    out = pd.DataFrame(rows)
    # –ü–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ ‚Äî –ø–æ–Ω—è—Ç–Ω—ã–π
    cols = ["CPU","GPU","RAM","RAM Channel",
            "Game Settings","Launch Options","Control Panel","Windows Optimization",
            "FPS Estimate","Source"]
    return out[[c for c in cols if c in out.columns] + [c for c in out.columns if c not in cols]]

# ============= UI =============
st.title("CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ —Å–≤–æ—é —Å–±–æ—Ä–∫—É: –∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows.")

# –°–æ—Ü-—Å—Å—ã–ª–∫–∏ (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ–π–¥–∂–∏)
st.markdown("**–ú–æ–∏ –∫–∞–Ω–∞–ª—ã:**")
st.markdown("""
<div class="badge-row">
  <a class="badge badge-tt" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">TikTok</a>
  <a class="badge badge-yt" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">YouTube</a>
  <a class="badge badge-tw" href="https://m.twitch.tv/melevik/home" target="_blank">Twitch</a>
</div>
""", unsafe_allow_html=True)

st.markdown("---")

# –§–∏–ª—å—Ç—Ä—ã + –≤—ã–±–æ—Ä –∫–∞–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –û–ó–£
c1, c2, c3, c4 = st.columns([1,1,1,1])
with c1:
    cpu = st.selectbox("üñ•Ô∏è –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", sorted(df["CPU"].dropna().unique()))
with c2:
    gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", sorted(df["GPU"].dropna().unique()))
with c3:
    ram = st.selectbox("üíæ –û–ó–£", sorted(df["RAM"].dropna().unique()))
with c4:
    ram_channel = st.radio("üß© –ö–∞–Ω–∞–ª –û–ó–£", ["Dual", "Single"], index=0, horizontal=True)

st.markdown('<div class="small-note">üí° –î–≤—É—Ö–∫–∞–Ω–∞–ª (–¥–≤–µ –ø–ª–∞–Ω–∫–∏) —á–∞—Å—Ç–æ –¥–∞—ë—Ç –ª—É—á—à–∏–π –ø—Ä–∏—Ä–æ—Å—Ç FPS –≤ CS2. –û–¥–Ω–æ–∫–∞–Ω–∞–ª ‚Äî –º–∏–Ω—É—Å 10‚Äì25% –≤ —Ç–∏–ø–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ö.</div>', unsafe_allow_html=True)

# –ü–æ–∏—Å–∫
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    result = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]
    st.markdown("---")

    if result.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –æ–±—ä—ë–º –û–ó–£ –∏–ª–∏ —Å–æ—Å–µ–¥–Ω—é—é —Å–µ—Ä–∏—é CPU/GPU.")
    else:
        row = result.iloc[0].to_dict()
        # –û—á–∏—â–∞–µ–º –∑–∞–ø—É—Å–∫
        launch = clean_launch_options(row.get("Launch Options",""))
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        game_settings = row.get("Game Settings","")
        windows_opt = row.get("Windows Optimization","")
        fps_text = row.get("FPS Estimate","‚Äî")

        if ram_channel == "Single":
            game_settings = add_single_channel_tips(game_settings)
            fps_text = reduce_fps_text(fps_text, 0.85)
            win_tip = "‚Ä¢ –î–æ–±–∞–≤—å –≤—Ç–æ—Ä—É—é –ø–ª–∞–Ω–∫—É –û–ó–£ (–¥–≤—É—Ö–∫–∞–Ω–∞–ª) ‚Äî —ç—Ç–æ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ —Å–∞–º—ã–π –∑–∞–º–µ—Ç–Ω—ã–π –∞–ø–≥—Ä–µ–π–¥ –¥–ª—è CS2."
            windows_opt = (windows_opt + ("\n\n" if windows_opt else "") + win_tip)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown(f"**üñ•Ô∏è –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('CPU','')}  \n"
                    f"**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('GPU','')}  \n"
                    f"**üíæ –û–ó–£:** {row.get('RAM','')}  \n"
                    f"**üß© –ö–∞–Ω–∞–ª –û–ó–£:** {ram_channel}")

        # –ë–ª–æ–∫–∏-—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        st.markdown("#### <span class='hicon'>üéÆ</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã", unsafe_allow_html=True)
        st.markdown(f"<div class='code-wrap'>{game_settings.strip() or '‚Äî'}</div>", unsafe_allow_html=True)

        st.markdown("#### <span class='hicon'>üöÄ</span> –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ)", unsafe_allow_html=True)
        st.code(launch or "‚Äî")

        st.markdown("#### <span class='hicon'>üéõÔ∏è</span> –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA / AMD)", unsafe_allow_html=True)
        cp_text = (row.get("Control Panel","") or "").strip()
        st.markdown(f"<div class='code-wrap'>{cp_text or '‚Äî'}</div>", unsafe_allow_html=True)

        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ ¬´–ú–∞–∫—Å. –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä—ã)
        if looks_dangerous_nvidia(cp_text):
            st.info("–°–æ–≤–µ—Ç: ¬´–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª–µ–Ω —Ä–µ–∂–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏¬ª –≤–∫–ª—é—á–∞–π **—Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ CS2 (cs2.exe)**, –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–æ ‚Äî –∏–Ω–∞—á–µ –∫–∞—Ä—Ç–∞ –±—É–¥–µ—Ç –¥–µ—Ä–∂–∞—Ç—å –≤—ã—Å–æ–∫–∏–µ —á–∞—Å—Ç–æ—Ç—ã –¥–∞–∂–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ.")

        st.markdown("#### <span class='hicon'>ü™ü</span> –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é)", unsafe_allow_html=True)
        st.markdown(f"<div class='code-wrap'>{windows_opt.strip() or '‚Äî'}</div>", unsafe_allow_html=True)

        # FPS + –∏—Å—Ç–æ—á–Ω–∏–∫
        st.markdown(f"**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {fps_text if str(fps_text).strip() else '‚Äî'}")
        st.caption(f"–ò—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è: {row.get('Source','‚Äî')}")

        # –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ .txt
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n"
            f"RAM Channel: {ram_channel}\n\n"
            f"[Game Settings]\n{game_settings.strip()}\n\n"
            f"[Launch Options]\n{launch}\n\n"
            f"[Control Panel]\n{cp_text}\n\n"
            f"[Windows Optimization]\n{windows_opt.strip()}\n\n"
            f"FPS Estimate: {fps_text}\n"
            f"Source: {row.get('Source','')}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

        # –ú–∏–Ω–∏-FAQ
        with st.expander("üí¨ –ú–∏–Ω–∏-FAQ –ø–æ –∑–∞–¥–µ—Ä–∂–∫–∞–º, FPS –∏ –ø–æ–ª–µ–∑–Ω—ã–º —Ç—É–º–±–ª–µ—Ä–∞–º"):
            st.markdown("""
- **V-Sync** ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å (–¥–∞—ë—Ç –∑–∞–¥–µ—Ä–∂–∫—É). –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å ‚Äî —Å—Ç–∞–≤—å `fps_max` (~90‚Äì95% –æ—Ç —Ä–µ—Ñ—Ä–µ—à–∞ –º–æ–Ω–∏—Ç–æ—Ä–∞).
- **NVIDIA Reflex** ‚Äî –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è input lag. –í CPU-—É–ø–æ—Ä–µ –ø—Ä–∏—Ä–æ—Å—Ç FPS –Ω–µ –∂–¥—ë–º; —Ç–µ—Å—Ç–∏—Ä—É–π `–í–∫–ª` –∏ `–í–∫–ª+—É—Å–∏–ª–µ–Ω–∏–µ`.
- **–û–∫–Ω–æ/–ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω** ‚Äî —á–∞—â–µ —Å—Ç–∞–±–∏–ª—å–Ω–µ–µ **–ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω** (–±–µ–∑ –æ–≤–µ—Ä–ª–µ–µ–≤).
- **–û–≤–µ—Ä–ª–µ–∏** (Steam, Discord, GeForce, –±—Ä–∞—É–∑–µ—Ä, –∫–µ–π—Å-—Å–∞–π—Ç—ã) ‚Äî –º–æ–≥—É—Ç –¥–∞–≤–∞—Ç—å —Ñ—Ä–∏–∑—ã –ø—Ä–∏ ALT-TAB/–æ—Ç–∫—Ä—ã—Ç–∏–∏ TAB. –û—Ç–∫–ª—é—á–∏ –¥–ª—è —Ç–µ—Å—Ç–∞.
- **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ FPS** ‚Äî –µ—Å–ª–∏ –ø—Ä–∏ TAB/–º–µ–Ω—é –µ—Å—Ç—å —Ñ—Ä–∏–∑, –ø–æ—Å—Ç–∞–≤—å `fps_max` –Ω–∏–∂–µ —Ç–≤–æ–µ–≥–æ ¬´—Å—Ä–µ–¥–Ω–µ–≥–æ¬ª FPS –Ω–∞ ~5‚Äì10%.
- **–ü–ª–∞–Ω–∫–∏ –û–ó–£** ‚Äî –¥–≤—É—Ö–∫–∞–Ω–∞–ª (2√ó8, 2√ó16) –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –æ–¥–Ω–∞ –ø–ª–∞–Ω–∫–∞ —Ç–æ–≥–æ –∂–µ –æ–±—ä—ë–º–∞.
""")

# –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –±–∞–∑—É (—Å RAM Channel)
st.markdown("---")
st.markdown("**–ù—É–∂–Ω–∞ –±–∞–∑–∞ —Å –∫–æ–ª–æ–Ω–∫–æ–π `RAM Channel`?** –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏ —Å–∫–∞—á–∞–π –¥–ª—è —Å–≤–æ–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.")
if st.button("üì¶ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å builds_with_ram_channel.csv"):
    df_aug = augment_with_ram_channel(df)
    csv_bytes = df_aug.to_csv(index=False).encode("utf-8-sig")
    st.download_button("üíæ –°–∫–∞—á–∞—Ç—å builds_with_ram_channel.csv",
                       data=csv_bytes, file_name="builds_with_ram_channel.csv", mime="text/csv")

# –î–æ–Ω–∞—Ç-–±–ª–æ–∫ (–Ω–µ–Ω–∞–≤—è–∑—á–∏–≤—ã–π)
st.markdown("---")
st.markdown("""
<div class="donate-box">
  <b>–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç</b><br>
  –ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ (—ç–∫—Ä–∞–Ω –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π).<br>
  <span class="small-note">–¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º —á–∞—â–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –±–∞–∑—É –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Å–±–æ—Ä–∫–∏.</span><br><br>
  üëâ <a class="badge badge-yt" href="https://www.donationalerts.com/r/melevik" target="_blank">–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å</a>
</div>
""", unsafe_allow_html=True)

