import re
import pandas as pd
import streamlit as st

# ---------- –±–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ----------
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="wide")

# ---------- —Å—Ç–∏–ª–∏ (—Å–æ—Ü-–∫–Ω–æ–ø–∫–∏, –¥–æ–Ω–∞—Ç, —á–µ—Ä–Ω—ã–π –±–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤) ----------
st.markdown("""
<style>
/* –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —á—ë—Ä–Ω–æ–º —Ñ–æ–Ω–µ */
.result-box {
  background: #0f1116;
  border: 1px solid #222;
  border-radius: 10px;
  padding: 16px 18px;
  color: #e8e8e8;
  line-height: 1.55;
  font-size: 15px;
}

/* —Ä—è–¥ —Å–æ—Ü-–∫–Ω–æ–ø–æ–∫ */
.social-row { display:flex; gap:10px; flex-wrap:wrap; margin:8px 0 2px 0; }
.btn {
  display:inline-block; padding:10px 14px; border-radius:8px; text-decoration:none;
  color:#fff; font-weight:600; font-size:14px;
}
.btn-yt { background:#FF0000; }
.btn-tt { background:#000000; border:1px solid #333; }
.btn-tw { background:#9146FF; }

/* –¥–æ–Ω–∞—Ç-–ø–ª–∞—à–∫–∞ —Å –º—è–≥–∫–æ–π –ø—É–ª—å—Å–∞—Ü–∏–µ–π –∂—ë–ª—Ç–æ–≥–æ */
.donate-box {
  position: relative;
  background: linear-gradient(135deg, #2a2200, #1a1600);
  border: 1px solid #4d3b00;
  border-radius: 12px;
  padding: 14px 16px;
  color: #ffd666;
  margin-top: 10px;
  overflow: hidden;
}
.donate-pulse {
  position: absolute;
  inset: -40%;
  background: radial-gradient(circle, rgba(255, 223, 0, 0.16) 0%, rgba(0,0,0,0) 60%);
  animation: pulse 2.8s ease-in-out infinite;
  pointer-events: none;
}
@keyframes pulse {
  0% { transform: scale(0.9); opacity: 0.35; }
  50% { transform: scale(1.05); opacity: 0.55; }
  100% { transform: scale(0.9); opacity: 0.35; }
}

/* –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */
.warn {
  background:#1b1b1b; border:1px solid #3a3a3a; color:#ffec99;
  padding:10px 12px; border-radius:8px; margin:8px 0;
}
</style>
""", unsafe_allow_html=True)

# ---------- –∑–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è ----------
@st.cache_data
def load_builds():
    df = pd.read_csv("builds.csv")
    # –∫–∞–Ω–æ–Ω–∏–∑–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ (–µ—Å–ª–∏ –∏–º–µ–Ω–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è)
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df = ensure_col(df, "CPU", ["CPU","cpu","–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä"])
    df = ensure_col(df, "GPU", ["GPU","gpu","–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞"])
    df = ensure_col(df, "RAM", ["RAM","ram","–û–ó–£"])

    df = ensure_col(df, "Game Settings", ["Game Settings","Settings","–ì—Ä–∞—Ñ–∏–∫–∞"])
    df = ensure_col(df, "Launch Options", ["Launch Options","Params","–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞"])
    df = ensure_col(df, "Control Panel", ["Control Panel","Driver Settings","–ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization","Windows","–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate","FPS","–û–∂–∏–¥–∞–µ–º—ã–π FPS"])
    df = ensure_col(df, "Source", ["Source","–ò—Å—Ç–æ—á–Ω–∏–∫"])

    # —É–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ–º RAM ‚Üí '16 GB'
    df["RAM"] = (df["RAM"].astype(str)
                 .str.replace("\u200b","", regex=False)
                 .str.replace("\u00a0"," ", regex=False)  # NBSP
                 .str.lower()
                 .str.replace("–≥–±","gb")
                 .str.replace(" ", "")
                 .str.replace("gb"," GB")
                 )
    # –∏–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '16 GB' ‚Üí '16 GB', '16' ‚Üí '16 GB')
    def normalize_ram_display(s):
        m = re.search(r'(\d+)', str(s))
        if not m: return "8 GB"
        return f"{m.group(1)} GB"

    df["RAM"] = df["RAM"].apply(normalize_ram_display)

    # –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç—Ä–æ–∫ –¥–ª—è –∫–ª—é—á–µ–π
    def norm(s: str) -> str:
        s = str(s)
        s = s.replace("\u200b","").replace("\u00a0"," ")
        s = s.lower()
        s = s.replace("¬Æ","").replace("(tm)","").replace("‚Ñ¢","")
        # –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–æ–≤ –∏ —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤
        s = s.replace("geforce", "").replace("nvidia", "")
        s = s.replace("radeon", "").replace("amd", "")
        s = s.replace("intel", "").replace("core", "")
        s = s.replace("super", "super").replace("ti", "ti")
        s = s.replace("–≥–±","gb")
        # —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
        s = re.sub(r'[^a-z0-9]+', '', s)
        return s

    # –∫–ª—é—á–∏
    df["key_cpu"] = df["CPU"].apply(norm)
    df["key_gpu"] = df["GPU"].apply(norm)
    df["key_ram"] = df["RAM"].apply(norm)
    return df

builds = load_builds()

# ---------- —à–∞–ø–∫–∞ ----------
st.title("‚öôÔ∏è CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä (–æ–Ω–ª–∞–π–Ω)")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –∏ –±–∞–∑–æ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows. –ü–æ–∏—Å–∫ —É—Å—Ç–æ–π—á–∏–≤ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É/–ø—Ä–æ–±–µ–ª–∞–º –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è.")

# ---------- —Ñ–æ—Ä–º—ã –≤—ã–±–æ—Ä–∞ ----------
col1, col2, col3 = st.columns([1,1,1])
with col1:
    cpu_choice = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", sorted(builds["CPU"].dropna().unique()))
with col2:
    gpu_choice = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", sorted(builds["GPU"].dropna().unique()))
with col3:
    ram_choice = st.selectbox("üíæ –û–ó–£", sorted(builds["RAM"].dropna().unique()))

# ---------- –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ –û–ó–£ –∫–∞–Ω–∞–ª ----------
st.markdown('<div class="warn">‚ÑπÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –≤ –æ–¥–Ω–æ–∫–∞–Ω–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ (1√ó) FPS –Ω–∏–∂–µ, —á–µ–º –≤ –¥–≤—É—Ö–∫–∞–Ω–∞–ª—å–Ω–æ–º (2√ó). –î–ª—è –Ω–æ—É—Ç–±—É–∫–æ–≤ —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –∑–∞–º–µ—Ç–Ω–æ.</div>', unsafe_allow_html=True)

# ---------- —Å–æ—Ü—Å–µ—Ç–∏ ----------
st.markdown('<div class="social-row">', unsafe_allow_html=True)
st.markdown('<a class="btn btn-tt" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">TikTok</a>', unsafe_allow_html=True)
st.markdown('<a class="btn btn-yt" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">YouTube</a>', unsafe_allow_html=True)
st.markdown('<a class="btn btn-tw" href="https://m.twitch.tv/melevik/home" target="_blank">Twitch</a>', unsafe_allow_html=True)
st.markdown('</div>', unsafe_allow_html=True)

# ---------- –¥–æ–Ω–∞—Ç (—Å –º—è–≥–∫–æ–π –ø—É–ª—å—Å–∞—Ü–∏–µ–π) ----------
st.markdown("""
<div class="donate-box">
  <div class="donate-pulse"></div>
  <b>–ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ (—Ç–∏—Ç—Ä—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏)!</b><br>
  <a href="https://www.donationalerts.com/r/melevik" target="_blank" class="btn" style="background:#f1c40f; color:#222; margin-top:8px;">–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ DonatPay / DonationAlerts</a>
</div>
""", unsafe_allow_html=True)

st.markdown("---")

# ---------- —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–±–æ—Ä–∞ ----------
def norm(s: str) -> str:
    s = str(s)
    s = s.replace("\u200b","").replace("\u00a0"," ")
    s = s.lower().replace("¬Æ","").replace("(tm)","").replace("‚Ñ¢","")
    s = s.replace("geforce","").replace("nvidia","")
    s = s.replace("radeon","").replace("amd","")
    s = s.replace("intel","").replace("core","")
    s = s.replace("–≥–±","gb")
    s = re.sub(r'[^a-z0-9]+', '', s)
    return s

def find_exact(df, cpu, gpu, ram):
    kcpu, kgpu, kram = norm(cpu), norm(gpu), norm(ram)
    hit = df[(df["key_cpu"] == kcpu) & (df["key_gpu"] == kgpu) & (df["key_ram"] == kram)]
    return hit

def find_close(df, cpu, gpu, ram, limit=5):
    # —Å–ª–∞–±–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–µ—Ä–∏–∏ CPU/GPU –∏ –æ–±—ä–µ–º—É RAM
    kcpu, kgpu, kram = norm(cpu), norm(gpu), norm(ram)
    base = df.copy()
    # –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–µ–º –ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º
    base["score"] = 0
    base.loc[base["key_cpu"].str.contains(re.escape(kcpu[:6]), na=False), "score"] += 2
    base.loc[base["key_gpu"].str.contains(re.escape(kgpu[:6]), na=False), "score"] += 2
    base.loc[base["key_ram"] == kram, "score"] += 1
    out = base.sort_values(["score"], ascending=False).head(limit)
    return out.drop(columns=["score"])

# ---------- –ø–æ–∏—Å–∫ ----------
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    exact = find_exact(builds, cpu_choice, gpu_choice, ram_choice)

    # –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –ø–æ –≤–µ–Ω–¥–æ—Ä—É
    gpu_str = str(gpu_choice).lower()
    if "rx" in gpu_str or "radeon" in gpu_str or "amd" in gpu_str:
        st.markdown('<div class="warn">‚ö†Ô∏è AMD Radeon: –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–µ –≤–∫–ª—é—á–∞–π—Ç–µ *Radeon Boost/Chill/Enhanced Sync* –¥–ª—è –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã ‚Äî –∑–∞–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ–ª—å–∫–æ –¥–ª—è CS2, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–≤–∏—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π FPS.</div>', unsafe_allow_html=True)
    if "intel" in gpu_str:
        st.markdown('<div class="warn">‚ÑπÔ∏è Intel iGPU: —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CS2 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∏—Å–∫—Ä–µ—Ç–Ω—É—é GPU (–µ—Å–ª–∏ –µ—Å—Ç—å). –í —Ä–µ–∂–∏–º–µ —Ç–æ–ª—å–∫–æ iGPU –¥–µ—Ä–∂–∏—Ç–µ –Ω–∏–∑–∫–∏–µ –ø—Ä–µ—Å–µ—Ç—ã –∏ 720p.</div>', unsafe_allow_html=True)

    st.markdown("---")
    if not exact.empty:
        row = exact.iloc[0]

        # –æ—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤ —É –∑–∞–ø—É—Å–∫–∞ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        launch_raw = str(row["Launch Options"])
        tokens = launch_raw.split()
        banned = {"-novid", "-nojoy"}  # –¥–ª—è CS2 –Ω–µ –Ω—É–∂–Ω—ã
        launch_clean = " ".join([t for t in tokens if t not in banned]).strip()

        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown('<div class="result-box">', unsafe_allow_html=True)
        st.markdown(f"""
**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row['CPU']}  
**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row['GPU']}  
**üíæ –û–ó–£:** {row['RAM']}

**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:**  
{row['Game Settings']}

**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):**  
`{launch_clean}`

**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):**  
{row['Control Panel']}

**ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):**  
{row['Windows Optimization']}

**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {row['FPS Estimate']}  
**üîó –ò—Å—Ç–æ—á–Ω–∏–∫:** {row['Source']}
""")
        st.markdown('</div>', unsafe_allow_html=True)

        # —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        profile_txt = (
            f"CPU: {row['CPU']}\nGPU: {row['GPU']}\nRAM: {row['RAM']}\n\n"
            f"[Game Settings]\n{row['Game Settings']}\n\n"
            f"[Launch Options]\n{launch_clean}\n\n"
            f"[Control Panel]\n{row['Control Panel']}\n\n"
            f"[Windows Optimization]\n{row['Windows Optimization']}\n\n"
            f"FPS Estimate: {row['FPS Estimate']}\nSource: {row['Source']}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

    else:
        st.warning("–ü–æ—Ö–æ–∂–µ, —Ç–æ—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç. –í–æ—Ç –±–ª–∏–∑–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:")
        close = find_close(builds, cpu_choice, gpu_choice, ram_choice, limit=6)
        for _, r in close.iterrows():
            st.markdown('<div class="result-box">', unsafe_allow_html=True)
            st.markdown(f"""
**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {r['CPU']}  
**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {r['GPU']}  
**üíæ –û–ó–£:** {r['RAM']}

**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:** {r['Game Settings']}  
**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:** `{str(r['Launch Options']).strip()}`  
**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞:** {r['Control Panel']}  
**ü™ü Windows:** {r['Windows Optimization']}  
**üìä FPS:** {r['FPS Estimate']} ¬∑ **–ò—Å—Ç–æ—á–Ω–∏–∫:** {r['Source']}
""")
            st.markdown('</div>', unsafe_allow_html=True)

st.markdown("---")

# ---------- Twitch (–æ–Ω–ª–∞–π–Ω) ----------
st.subheader("üé• Twitch ‚Äî –ø—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è (–µ—Å–ª–∏ –∏–¥—ë—Ç)")
st.components.v1.iframe(
    "https://player.twitch.tv/?channel=melevik&parent=share.streamlit.io&muted=true",
    height=360, scrolling=False
)

# ---------- YouTube (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ) ----------
st.subheader("üì∫ YouTube ‚Äî –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–µ–æ (–Ω–µ —à–æ—Ä—Ç—Å)")
st.components.v1.iframe(
    "https://www.youtube.com/embed?listType=user_uploads&list=melevik-avlaron",
    height=360, scrolling=False
)
