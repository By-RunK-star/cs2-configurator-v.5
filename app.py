import pandas as pd
import streamlit as st

# -------------------------- –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–¶–´ --------------------------
st.set_page_config(
    page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä",
    page_icon="üéÆ",
    layout="centered"
)

# -------------------------- –°–¢–ò–õ–ò (CSS) --------------------------
st.markdown("""
<style>
/* –¢—ë–º–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π */
.reco-card {
    background: #0f0f0f;
    border: 1px solid #2a2a2a;
    border-radius: 10px;
    padding: 18px 16px;
    color: #e8e8e8;
    font-size: 0.95rem;
}

/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ */
.reco-card h4{
    margin: 0.25rem 0 0.4rem 0;
    font-size: 1.02rem;
}

/* –ë–ª–æ–∫ —Å–æ—Ü-–∫–Ω–æ–ø–æ–∫ (–±—Ä–µ–Ω–¥–æ–≤—ã–µ —Ü–≤–µ—Ç–∞) */
.social-row {
    display: flex; gap: 10px; flex-wrap: wrap; margin: 8px 0 0 0;
}
.social-btn {
    display: inline-flex; align-items: center; justify-content: center;
    padding: 8px 12px; border-radius: 8px; text-decoration: none; font-weight: 600;
    color: #fff !important; border: none;
}
.social-btn:hover { opacity: .9; }

/* –¶–≤–µ—Ç–∞ –ø–ª–æ—â–∞–¥–æ–∫ */
.btn-tiktok { background:#000000; }
.btn-youtube { background:#FF0000; }
.btn-twitch { background:#9146FF; }

/* –î–æ–Ω–∞—Ç-–±–∞–Ω–Ω–µ—Ä (–º—è–≥–∫–∞—è –∂—ë–ª—Ç–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è) */
.donate-banner {
    border-radius: 10px;
    padding: 14px 16px;
    background: #1a1a1a;
    color: #ffd84d;
    font-weight: 700;
    border: 1px solid #4d3b00;
    box-shadow: 0 0 0px rgba(255, 215, 0, 0.0);
    animation: pulseGlow 2.4s ease-in-out infinite;
}
@keyframes pulseGlow {
    0%   { box-shadow: 0 0 0px rgba(255, 215, 0, 0.0);   }
    50%  { box-shadow: 0 0 18px rgba(255, 215, 0, 0.25); }
    100% { box-shadow: 0 0 0px rgba(255, 215, 0, 0.0);   }
}

/* –¢–æ–Ω–∫–∏–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */
.hr { height:1px; background:#2a2a2a; margin: 12px 0; }

/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */
.warn {
    border-left: 4px solid #f0ad4e;
    background: #1b1a17;
    color: #f5e8c7;
    padding: 10px 12px;
    border-radius: 6px;
    font-size: 0.92rem;
}
.info {
    border-left: 4px solid #5bc0de;
    background: #141a1f;
    color: #d6ecff;
    padding: 10px 12px;
    border-radius: 6px;
    font-size: 0.92rem;
}
</style>
""", unsafe_allow_html=True)

# -------------------------- –ó–ê–ì–†–£–ó–ö–ê –ë–ê–ó–´ --------------------------
@st.cache_data(show_spinner=False)
def load_data():
    # —á–∏—Ç–∞–µ–º —Å–Ω–∞—á–∞–ª–∞ —Å–∂–∞—Ç—ã–µ, –∑–∞—Ç–µ–º –æ–±—ã—á–Ω—ã–π CSV
    df = None
    for path in ["builds_site_ready.csv.gz", "builds.csv.gz", "builds.csv"]:
        try:
            if path.endswith(".gz"):
                df = pd.read_csv(path, compression="infer")
            else:
                df = pd.read_csv(path)
            break
        except Exception:
            df = None
    if df is None:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±–∞–∑—É builds. –ó–∞–ª–µ–π—Ç–µ —Ñ–∞–π–ª builds_site_ready.csv.gz –∏–ª–∏ builds.csv –≤ –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.")
        st.stop()

    # –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏–º—ë–Ω –∫–æ–ª–æ–Ω–æ–∫ (–Ω–∞ –≤—Å—è–∫–∏–π)
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df.columns = [c.strip() for c in df.columns]
    df = ensure_col(df, "CPU", ["CPU","Cpu","cpu"])
    df = ensure_col(df, "GPU", ["GPU","Gpu","gpu"])
    df = ensure_col(df, "RAM", ["RAM","Ram","ram"])
    df = ensure_col(df, "Game Settings", ["Game Settings","Settings","GameSettings"])
    df = ensure_col(df, "Launch Options", ["Launch Options","Launch","Params","LaunchOptions"])
    df = ensure_col(df, "Control Panel", ["Control Panel","ControlPanel","Driver Settings","Driver"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization","Windows Optimizations","Windows","Windows Opt"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate","FPS","FPS Range","Estimate"])
    df = ensure_col(df, "Source", ["Source","origin"])

    # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è RAM
    df["RAM"] = df["RAM"].astype(str)
    df["RAM"] = (df["RAM"]
                 .str.replace("–ì–ë"," GB", regex=False)
                 .str.replace("GB"," GB", regex=False)
                 .str.replace("  "," ", regex=False)
                 .str.strip())

    # —á–∏—Å—Ç–∏–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ CS2 –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—É—Å–∫–∞
    def clean_launch(s):
        if not isinstance(s, str):
            return ""
        banned = {"-novid", "-nojoy"}
        toks = [t for t in s.split() if t not in banned]
        out = " ".join(toks).strip()
        while "  " in out:
            out = out.replace("  "," ")
        return out
    df["Launch Options"] = df["Launch Options"].apply(clean_launch)

    # —É–±–∏—Ä–∞–µ–º —è–≤–Ω—ã–µ –¥—É–±–ª–∏
    df = df.drop_duplicates(subset=["CPU","GPU","RAM","Game Settings","Launch Options","Control Panel","Windows Optimization"], keep="first").reset_index(drop=True)
    return df

df = load_data()

# -------------------------- –ó–ê–ì–û–õ–û–í–û–ö --------------------------
st.title("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä CS2")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —Å–≤–æ–µ–π —Å–±–æ—Ä–∫–µ: –≥—Ä–∞—Ñ–∏–∫–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows.")

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: 1-–∫–∞–Ω–∞–ª vs 2-–∫–∞–Ω–∞–ª
st.markdown("""
<div class="info">
<b>–ü–∞–º—è—Ç—å:</b> –≤ –æ–¥–Ω–æ–∫–∞–Ω–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ FPS –æ–±—ã—á–Ω–æ –Ω–∏–∂–µ, –≤ –¥–≤—É—Ö–∫–∞–Ω–∞–ª—å–Ω–æ–º ‚Äî –≤—ã—à–µ. 
–ï—Å–ª–∏ —É –≤–∞—Å 1 –ø–ª–∞–Ω–∫–∞ –û–ó–£ ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –≤—Ç–æ—Ä—É—é –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏—Ä–æ—Å—Ç–∞ –≤ CPU-—É–ø–æ—Ä–µ.
</div>
""", unsafe_allow_html=True)

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Ç—É–º–±–ª–µ—Ä–∞–º
st.markdown("""
<div class="warn" style="margin-top:10px;">
<b>–í–∞–∂–Ω–æ:</b> –≤ –¥—Ä–∞–π–≤–µ—Ä–∞—Ö <b>NVIDIA/AMD/Intel</b> –º–µ–Ω—è–π—Ç–µ <u>—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è CS2</u>, –∞ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
–ì–ª–æ–±–∞–ª—å–Ω—ã–µ ¬´–º–∞–∫—Å. –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å / –Ω–∏–∑–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ / –∞–Ω—Ç–∏-–ª–∞–≥ / —Ñ–æ—Ä—Å-VSync¬ª –º–æ–≥—É—Ç:
<ul style="margin:6px 0 0 18px;">
  <li>–¥–µ—Ä–∂–∞—Ç—å –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–æ—Ç–∞—Ö –¥–∞–∂–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ;</li>
  <li>–ª–æ–º–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–∞—Ç—Ç–µ—Ä;</li>
  <li>(AMD) <b>Anti-Lag+</b> –≤–∫–ª—é—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è CS2; <b>Boost/Chill</b> ‚Äî —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é;</li>
  <li>(Intel iGPU) –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø–ª–∞–Ω —ç–Ω–µ—Ä–≥–æ–ø–∏—Ç–∞–Ω–∏—è –∏ –Ω–µ —Ñ–æ—Ä—Å–∏—Ä—É–π—Ç–µ VSync –≥–ª–æ–±–∞–ª—å–Ω–æ.</li>
</ul>
</div>
""", unsafe_allow_html=True)

# -------------------------- –§–ò–õ–¨–¢–†–´ --------------------------
col1, col2, col3 = st.columns(3)
with col1:
    cpu = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU)", sorted(df["CPU"].dropna().unique()))
with col2:
    gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (GPU)", sorted(df["GPU"].dropna().unique()))
with col3:
    ram = st.selectbox("üíæ –û–ó–£ (RAM)", sorted(df["RAM"].dropna().unique()))

# -------------------------- –ü–û–ò–°–ö --------------------------
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    subset = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]

    st.markdown('<div class="hr"></div>', unsafe_allow_html=True)

    if subset.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ.")
    else:
        row = subset.iloc[0].to_dict()
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
        game = row.get("Game Settings","").strip()
        launch = row.get("Launch Options","").strip()
        drv = row.get("Control Panel","").strip()
        winopt = row.get("Windows Optimization","").strip()
        fps = row.get("FPS Estimate","‚Äî")
        src = row.get("Source","")

        st.markdown(f"""
<div class="reco-card">
    <div><b>üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</b> {row.get('CPU','')} &nbsp;&nbsp; <b>üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</b> {row.get('GPU','')} &nbsp;&nbsp; <b>üíæ –û–ó–£:</b> {row.get('RAM','')}</div>
    <div class="hr"></div>
    <h4>üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</h4>
    <div>{game if game else "‚Äî"}</div>
    <h4>üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ)</h4>
    <div><code>{launch if launch else "‚Äî"}</code></div>
    <h4>üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD)</h4>
    <div>{drv if drv else "‚Äî"}</div>
    <h4>ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é)</h4>
    <div>{winopt if winopt else "‚Äî"}</div>
    <div class="hr"></div>
    <div><b>üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:</b> {fps} &nbsp;&nbsp; <b>üîó –ò—Å—Ç–æ—á–Ω–∏–∫:</b> {src}</div>
</div>
""", unsafe_allow_html=True)

        # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å .txt
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n\n"
            f"[Game Settings]\n{game}\n\n"
            f"[Launch Options]\n{launch}\n\n"
            f"[Control Panel]\n{drv}\n\n"
            f"[Windows Optimization]\n{winopt}\n\n"
            f"FPS Estimate: {fps}\n"
            f"Source: {src}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# -------------------------- –î–û–ù–ê–¢ --------------------------
st.markdown('<div class="hr"></div>', unsafe_allow_html=True)
st.subheader("üíñ –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç")
st.markdown("""
<div class="donate-banner">
–ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫.  
üëâ <a href="https://www.donationalerts.com/r/melevik" target="_blank" style="color:#ffe48b; text-decoration: underline;">DonatPay</a>
</div>
""", unsafe_allow_html=True)
st.caption("–ß–µ–º –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî —Ç–µ–º —á–∞—â–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑—É.")

# -------------------------- –°–û–¶–ò–ê–õ–ö–ò --------------------------
st.markdown('<div class="hr"></div>', unsafe_allow_html=True)
st.subheader("–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è, —á—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∞–≤—Ç–æ—Ä–∞")
st.markdown("""
<div class="social-row">
  <a class="social-btn btn-tiktok" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">TikTok</a>
  <a class="social-btn btn-youtube" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">YouTube</a>
  <a class="social-btn btn-twitch" href="https://m.twitch.tv/melevik/home" target="_blank">Twitch</a>
</div>
""", unsafe_allow_html=True)

# -------------------------- –í–°–¢–ê–í–ö–ò TWITCH/YOUTUBE --------------------------
with st.expander("üì∫ –û–Ω–ª–∞–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (Twitch/YouTube)", expanded=False):
    st.markdown("""
    <div style="display:flex; flex-wrap:wrap; gap:16px;">
      <div style="flex:1 1 360px; min-width:320px; max-width:560px;">
        <div style="font-weight:600; margin:4px 0 6px 0;">Twitch</div>
        <!-- –ü–æ–∫–∞–∂–µ—Ç —ç—Ñ–∏—Ä, –µ—Å–ª–∏ –≤—ã –≤ –æ–Ω–ª–∞–π–Ω–µ; –∏–Ω–∞—á–µ –æ—Ñ—Ñ–ª–∞–π–Ω-–ø–∞–Ω–µ–ª—å –∫–∞–Ω–∞–ª–∞ -->
        <iframe
          src="https://player.twitch.tv/?channel=melevik&parent=share.streamlit.io&muted=true"
          height="315" width="560" frameborder="0" scrolling="no" allowfullscreen>
        </iframe>
      </div>
      <div style="flex:1 1 360px; min-width:320px; max-width:560px;">
        <div style="font-weight:600; margin:4px 0 6px 0;">YouTube (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–æ–ª–∏–∫)</div>
        <!-- –ë–µ–∑ API: –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª–Ω–æ—Ñ–æ—Ä–º–∞—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ -->
        <iframe width="560" height="315"
          src="https://www.youtube.com/embed?listType=user_uploads&list=melevik-avlaron"
          title="YouTube video player" frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen>
        </iframe>
        <div style="font-size:12px; opacity:.8; margin-top:4px;">
          –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–æ–≥–æ ¬´–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–ª–Ω–æ—Ñ–æ—Ä–º–∞—Ç–Ω—ã–π —Ä–æ–ª–∏–∫ (–Ω–µ —à–æ—Ä—Ç)¬ª ‚Äî –ø–æ–¥–∫–ª—é—á–∏–º YouTube API.
        </div>
      </div>
    </div>
    """, unsafe_allow_html=True)

# -------------------------- –ö–ù–û–ü–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–ó–´ --------------------------
st.markdown('<div class="hr"></div>', unsafe_allow_html=True)
if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É (–ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª)"):
    # —á–∏—Å—Ç–∏–º –∫—ç—à –∏ –º—è–≥–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    load_data.clear()
    st.rerun()
