import pandas as pd
import streamlit as st

# ------------------ –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–¶–´ ------------------
st.set_page_config(
    page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä",
    page_icon="üéÆ",
    layout="centered"
)

# ------------------ –°–¢–ò–õ–ò (—Å–æ—Ü-–∫–Ω–æ–ø–∫–∏ + –º—è–≥–∫–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è) ------------------
st.markdown("""
<style>
.badge-row { display:flex; gap:10px; flex-wrap:wrap; margin-top:4px; }
.badge {
  text-decoration:none; padding:8px 12px; border-radius:8px;
  font-weight:600; border:1px solid rgba(255,255,255,0.2);
}
.badge:hover { filter:brightness(1.08); }

.badge-yt { background:#FF0000; color:white; }
.badge-tt { background:#000000; color:white; }
.badge-tw { background:#9146FF; color:white; }

.donate-box {
  border:1px solid rgba(255,255,255,0.15);
  border-radius:12px; padding:14px;
  background:rgba(255,255,255,0.03);
  margin:12px 0;
  animation:pulse 2.5s ease-in-out infinite;
}
@keyframes pulse {
  0%   { box-shadow:0 0 0 0 rgba(255,215,0,0.0); }
  50%  { box-shadow:0 0 24px 2px rgba(255,215,0,0.18); }
  100% { box-shadow:0 0 0 0 rgba(255,215,0,0.0); }
}
.small-note { opacity:0.8; font-size:0.92rem; }
.code-wrap code { white-space:pre-wrap; }
</style>
""", unsafe_allow_html=True)

# ------------------ –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ------------------
@st.cache_data
def load_data():
    df = pd.read_csv("builds.csv")
    # –ö–∞–Ω–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å—Ç–æ–ª–±—Ü—ã (–µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∫–æ–≥–¥–∞-—Ç–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ—Ç)
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df = ensure_col(df, "CPU", ["CPU"])
    df = ensure_col(df, "GPU", ["GPU"])
    df = ensure_col(df, "RAM", ["RAM"])
    df = ensure_col(df, "Game Settings", ["Game Settings","Settings"])
    df = ensure_col(df, "Launch Options", ["Launch Options","Params","Launch"])
    df = ensure_col(df, "Control Panel", ["Control Panel","Driver","Driver Settings"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization","Windows"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate","FPS","Estimate"])
    df = ensure_col(df, "Source", ["Source"])

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º RAM
    df["RAM"] = df["RAM"].astype(str).str.replace("GB"," GB", regex=False).str.replace("  "," ", regex=False).str.strip()
    return df

df = load_data()

# –ß–∏—Å—Ç–∏–º –∑–∞–ø—É—Å–∫ –æ—Ç –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤ (—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞)
def clean_launch_options(s: str) -> str:
    if not isinstance(s, str):
        return ""
    banned = {"-novid", "-nojoy"}
    toks = s.split()
    toks = [t for t in toks if t not in banned]
    cleaned = " ".join(toks).strip()
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned

# ------------------ UI ------------------
st.title("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä CS2")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ —Å–≤–æ—é —Å–±–æ—Ä–∫—É: –∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –∏ Windows-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.")

# –°–æ—Ü-—Å—Å—ã–ª–∫–∏ (–≤–µ—Ä—Ö)
st.markdown("**–ú–æ–∏ –∫–∞–Ω–∞–ª—ã:**")
st.markdown("""
<div class="badge-row">
  <a class="badge badge-tt" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">TikTok</a>
  <a class="badge badge-yt" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">YouTube</a>
  <a class="badge badge-tw" href="https://m.twitch.tv/melevik/home" target="_blank">Twitch</a>
</div>
""", unsafe_allow_html=True)

st.markdown("---")

# –§–∏–ª—å—Ç—Ä—ã
col1, col2, col3 = st.columns(3)
with col1:
    cpu = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU)", sorted(df["CPU"].dropna().unique()))
with col2:
    gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (GPU)", sorted(df["GPU"].dropna().unique()))
with col3:
    ram = st.selectbox("üíæ –û–ó–£ (RAM)", sorted(df["RAM"].dropna().unique()))

# –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø—Ä–æ –¥–≤—É—Ö–∫–∞–Ω–∞–ª
st.markdown(
    '<div class="small-note">üí° –ï—Å–ª–∏ —É —Ç–µ–±—è –æ–¥–Ω–∞ –ø–ª–∞–Ω–∫–∞ –û–ó–£ ‚Äî –¥–æ–±–∞–≤—å –≤—Ç–æ—Ä—É—é (–¥–≤—É—Ö–∫–∞–Ω–∞–ª). –≠—Ç–æ —á–∞—Å—Ç–æ –¥–∞—ë—Ç —Å–∞–º—ã–π –ª—É—á—à–∏–π –ø—Ä–∏—Ä–æ—Å—Ç –≤ CS2.</div>',
    unsafe_allow_html=True
)

# –ü–æ–∏—Å–∫
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    result = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]

    st.markdown("---")

    if result.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –æ–±—ä—ë–º RAM –∏–ª–∏ —Å–æ—Å–µ–¥–Ω–µ–µ —Å–µ–º–µ–π—Å—Ç–≤–æ CPU/GPU.")
    else:
        row = result.iloc[0].to_dict()
        launch_clean = clean_launch_options(row.get("Launch Options",""))

        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

        # –ö—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        st.markdown(f"**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('CPU','')}  \n"
                    f"**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('GPU','')}  \n"
                    f"**üíæ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:** {row.get('RAM','')}")

        # –ë–ª–æ–∫–∏
        st.markdown("### üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã")
        st.markdown(f"<div class='code-wrap'><code>{row.get('Game Settings','').strip()}</code></div>", unsafe_allow_html=True)

        st.markdown("### üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ)")
        st.code(launch_clean or "‚Äî")

        st.markdown("### üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD)")
        st.markdown(f"<div class='code-wrap'><code>{row.get('Control Panel','').strip()}</code></div>", unsafe_allow_html=True)

        st.markdown("### ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é)")
        st.markdown(f"<div class='code-wrap'><code>{row.get('Windows Optimization','').strip()}</code></div>", unsafe_allow_html=True)

        # FPS + –∏—Å—Ç–æ—á–Ω–∏–∫
        fps = row.get("FPS Estimate","‚Äî")
        src = row.get("Source","‚Äî")
        st.markdown(f"**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {fps if str(fps).strip() else '‚Äî'}")
        st.caption(f"–ò—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è: {src}")

        # –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n\n"
            f"[Game Settings]\n{row.get('Game Settings','').strip()}\n\n"
            f"[Launch Options]\n{launch_clean}\n\n"
            f"[Control Panel]\n{row.get('Control Panel','').strip()}\n\n"
            f"[Windows Optimization]\n{row.get('Windows Optimization','').strip()}\n\n"
            f"FPS Estimate: {fps}\n"
            f"Source: {src}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# –î–æ–Ω–∞—Ç-–±–ª–æ–∫ (–Ω–µ–Ω–∞–≤—è–∑—á–∏–≤—ã–π, —Å –ø—É–ª—å—Å–∞—Ü–∏–µ–π)
st.markdown("---")
st.markdown("""
<div class="donate-box">
  <b>–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç</b><br>
  –ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ (—ç–∫—Ä–∞–Ω –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π).  
  <span class="small-note">–¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º —á–∞—â–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –±–∞–∑—É –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Å–±–æ—Ä–∫–∏.</span><br><br>
  üëâ <a class="badge badge-yt" href="https://www.donationalerts.com/r/melevik" target="_blank">–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ</a>
</div>
""", unsafe_allow_html=True)
