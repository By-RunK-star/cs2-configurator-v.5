# app.py
import streamlit as st
import pandas as pd
import re

# ================== –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–¶–´ ==================
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="centered")

# ---------- –ö–û–ù–§–ò–ì –í–°–¢–†–û–ï–ö ----------
TWITCH_CHANNEL = "melevik"                   # <-- —Ç–≤–æ–π Twitch-–∫–∞–Ω–∞–ª
TWITCH_PARENT_DOMAIN = "your-app.streamlit.app"  # <-- –¥–æ–º–µ–Ω —Ç–≤–æ–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
YOUTUBE_LAST_VIDEO_ID = "dQw4w9WgXcQ"        # <-- ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª–Ω–æ—Ñ–æ—Ä–º–∞—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ

# ================== –°–¢–ò–õ–ò ==================
st.markdown("""
<style>
.reco-box {
  background:#0b0b0b; color:#e6e6e6; border:1px solid #2a2a2a;
  border-radius:10px; padding:16px 18px; line-height:1.5; font-size:0.98rem;
}
.btn-row { display:flex; gap:10px; flex-wrap:wrap; }
.btn { display:inline-flex; align-items:center; gap:8px; padding:10px 14px;
       border-radius:8px; text-decoration:none; font-weight:600; color:#fff; border:none; }
.btn-yt { background:#FF0000; }
.btn-twitch { background:#9146FF; }
.btn-tt { background:#000000; border:1px solid #222; }
.pulse-wrap {
  border-radius:12px; padding:14px 16px; border:1px solid #3a3000;
  background:linear-gradient(180deg,#2b2500,#1c1800);
  position:relative; box-shadow:0 0 0 0 rgba(255,213,0,0.45); animation:pulse 2.4s ease-in-out infinite;
}
@keyframes pulse {
  0% { box-shadow:0 0 0 0 rgba(255,213,0,0.36); }
  70% { box-shadow:0 0 20px 8px rgba(255,213,0,0.10); }
  100% { box-shadow:0 0 0 0 rgba(255,213,0,0.0); }
}
.pulse-title { color:#FFD700; font-weight:800; margin:0 0 6px 0; }
.pulse-text { color:#f1f1c0; margin:6px 0 0 0; }
.note {
  background:#121212; border:1px solid #2a2a2a; border-radius:8px;
  padding:10px 12px; color:#d9d9d9; font-size:0.95rem;
}
.embed-card { background:#0b0b0b; border:1px solid #2a2a2a; border-radius:10px; padding:10px; }
.embed-title { color:#ddd; font-weight:700; font-size:1rem; margin-bottom:8px; }
</style>
""", unsafe_allow_html=True)

# ================== –£–¢–ò–õ–ò–¢–´ –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò ==================
def norm_space(s: str) -> str:
    return re.sub(r"\s+", " ", s.strip())

def cpu_key(s: str) -> str:
    s = s.lower()
    s = s.replace("¬Æ","").replace("‚Ñ¢","")
    s = s.replace("intel ","intel ").replace("amd ","amd ")
    s = s.replace("core ","core ")
    s = s.replace("ryzen ","ryzen ")
    s = s.replace("  ", " ")
    s = re.sub(r"[^a-z0-9\-\s]", "", s)
    return norm_space(s)

def gpu_key(s: str) -> str:
    s = s.lower()
    s = s.replace("nvidia ","nvidia ").replace("geforce ","geforce ")
    s = s.replace("amd ","amd ").replace("radeon ","radeon ")
    s = s.replace("  ", " ")
    s = re.sub(r"[^a-z0-9\-\s]", "", s)
    return norm_space(s)

def ram_gb_val(s: str):
    if s is None:
        return None
    s = str(s).lower().replace("–≥–±","gb")
    digits = re.findall(r"\d+", s)
    if not digits:
        return None
    try:
        return int(digits[0])
    except:
        return None

def clean_launch_options(s: str) -> str:
    if not isinstance(s, str): return ""
    banned = {"-novid", "-nojoy"}
    tokens = [t for t in s.split() if t not in banned]
    cleaned = " ".join(tokens).strip()
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned

# ================== –ó–ê–ì–†–£–ó–ö–ê –ë–ê–ó–´ ==================
@st.cache_data
def load_builds():
    try:
        df = pd.read_csv("builds.csv")
    except FileNotFoundError:
        st.error("–§–∞–π–ª builds.csv –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ó–∞–ª–µ–π –µ–≥–æ –∏ –Ω–∞–∂–º–∏ ¬´üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É¬ª.")
        return pd.DataFrame()

    # –ö–∞–Ω–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–ª–æ–Ω–æ–∫
    df.columns = [c.strip() for c in df.columns]
    canon = {
        "CPU": ["CPU","cpu","Cpu","–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä"],
        "GPU": ["GPU","gpu","Gpu","–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞"],
        "RAM": ["RAM","ram","Ram","–û–ó–£","Memory","RAM (GB)","ram_gb"],
        "Game Settings": ["Game Settings","Settings","GameSettings","–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã"],
        "Launch Options": ["Launch Options","Launch","Params","LaunchOptions","–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞"],
        "Control Panel": ["Control Panel","ControlPanel","Driver Settings","Driver","–ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞"],
        "Windows Optimization": ["Windows Optimization","Windows","Windows Opt","–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows"],
        "FPS Estimate": ["FPS Estimate","FPS","FPS Range","Estimate","–û–∂–∏–¥–∞–µ–º—ã–π FPS"],
        "Source": ["Source","–ò—Å—Ç–æ—á–Ω–∏–∫"]
    }
    for target, vars_ in canon.items():
        if target not in df.columns:
            for v in vars_:
                if v in df.columns:
                    df[target] = df[v]
                    break
        if target not in df.columns:
            df[target] = ""

    # –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    df["cpu_key"] = df["CPU"].astype(str).apply(cpu_key)
    df["gpu_key"] = df["GPU"].astype(str).apply(gpu_key)
    df["ram_gb"]  = df["RAM"].apply(ram_gb_val)

    # –§–æ—Ä–º–∞—Ç RAM –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    def fmt_ram_disp(x):
        return f"{x} GB" if pd.notnull(x) else ""
    df["RAM_display"] = df["ram_gb"].apply(fmt_ram_disp)

    # –£–±–∏—Ä–∞–µ–º —è–≤–Ω—ã–µ –º—É—Å–æ—Ä–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    df = df[df["cpu_key"]!=""]
    df = df[df["gpu_key"]!=""]
    df = df[df["ram_gb"].notnull()]

    # –î–µ–¥—É–ø –ø–æ –∫–ª—é—á–∞–º
    df = df.drop_duplicates(subset=["cpu_key","gpu_key","ram_gb"], keep="first").reset_index(drop=True)
    return df

builds = load_builds()

# ================== UI: –®–ê–ü–ö–ê ==================
st.title("‚öôÔ∏è CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞, —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏).")

# –í—Å—Ç—Ä–æ–π–∫–∏: Twitch + YouTube (–∫–∞–∫ –±—ã–ª–æ)
colA, colB = st.columns(2, gap="large")
with colA:
    st.markdown('<div class="embed-card"><div class="embed-title">üî¥ Twitch ‚Äî LIVE —Å—Ç–∞—Ç—É—Å</div>', unsafe_allow_html=True)
    st.markdown(f"""
    <iframe
        src="https://player.twitch.tv/?channel={TWITCH_CHANNEL}&parent={TWITCH_PARENT_DOMAIN}&muted=true"
        height="260" width="100%" frameborder="0" scrolling="no" allowfullscreen="true">
    </iframe>
    """, unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

with colB:
    st.markdown('<div class="embed-card"><div class="embed-title">‚ñ∂Ô∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–µ–æ –Ω–∞ YouTube</div>', unsafe_allow_html=True)
    st.markdown(f"""
    <iframe
        width="100%" height="260"
        src="https://www.youtube.com/embed/{YOUTUBE_LAST_VIDEO_ID}"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen>
    </iframe>
    """, unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

st.markdown("---")

# ================== –ü–û–ò–°–ö –ù–ê–°–¢–†–û–ï–ö ==================
st.subheader("üîç –ü–æ–¥–±–æ—Ä –ø–æ –∂–µ–ª–µ–∑—É")

if builds.empty:
    st.info("–ó–∞–≥—Ä—É–∑–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π builds.csv –∏ –Ω–∞–∂–º–∏ ¬´üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É¬ª.")
else:
    # –û–ø—Ü–∏–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –≤ –±–∞–∑–µ, –Ω–æ –º–∞—Ç—á–∏–º –ø–æ –∫–ª—é—á–∞–º
    cpu_options = sorted(builds["CPU"].unique(), key=lambda s: cpu_key(str(s)))
    gpu_options = sorted(builds["GPU"].unique(), key=lambda s: gpu_key(str(s)))
    ram_options = sorted(builds["ram_gb"].dropna().unique())  # —á–∏—Å–ª–∞
    ram_display = [f"{int(x)} GB" for x in ram_options]

    cpu_sel = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU)", cpu_options)
    gpu_sel = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (GPU)", gpu_options)
    ram_sel = st.selectbox("üíæ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM)", ram_display)

    if st.button("–ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
        cpu_k = cpu_key(str(cpu_sel))
        gpu_k = gpu_key(str(gpu_sel))
        ram_g = int(re.findall(r"\d+", ram_sel)[0]) if re.findall(r"\d+", ram_sel) else None

        result = builds[
            (builds["cpu_key"] == cpu_k) &
            (builds["gpu_key"] == gpu_k) &
            (builds["ram_gb"]  == ram_g)
        ]

        st.markdown("---")

        if result.empty:
            st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å —Ç–æ—á–Ω–æ—Å—Ç—å CPU/GPU/RAM –≤ builds.csv –∏–ª–∏ –æ–±–Ω–æ–≤–∏ –±–∞–∑—É –Ω–∏–∂–µ.")
        else:
            row = result.iloc[0].to_dict()
            launch_clean = clean_launch_options(row.get("Launch Options",""))

            st.markdown('<div class="reco-box">', unsafe_allow_html=True)
            st.markdown(f"""
**üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:** {row.get('CPU','')}
**üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:** {row.get('GPU','')}
**üíæ –û–ó–£:** {row.get('RAM_display', row.get('RAM',''))}

**üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:**  
{row.get('Game Settings','‚Äî')}

**üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):**  
`{launch_clean if launch_clean else "‚Äî"}`

**üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):**  
{row.get('Control Panel','‚Äî')}

**ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):**  
{row.get('Windows Optimization','‚Äî')}

**üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:** {row.get('FPS Estimate','‚Äî')}
**üîó –ò—Å—Ç–æ—á–Ω–∏–∫:** {row.get('Source','‚Äî')}
""")
            st.markdown('</div>', unsafe_allow_html=True)

            st.markdown('<div class="note">üí° –ï—Å–ª–∏ —É —Ç–µ–±—è –æ–¥–Ω–æ–∫–∞–Ω–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å (1√ó –º–æ–¥—É–ª—å), FPS –±—É–¥–µ—Ç –Ω–∏–∂–µ, —á–µ–º –ø—Ä–∏ –¥–≤—É—Ö–∫–∞–Ω–∞–ª–µ (2√ó –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π). –î–ª—è CS2 –¥–≤—É—Ö–∫–∞–Ω–∞–ª –¥–∞—ë—Ç –∑–∞–º–µ—Ç–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç.</div>', unsafe_allow_html=True)

            profile_txt = (
                f"CPU: {row.get('CPU','')}\n"
                f"GPU: {row.get('GPU','')}\n"
                f"RAM: {row.get('RAM_display', row.get('RAM',''))}\n\n"
                f"[Game Settings]\n{row.get('Game Settings','')}\n\n"
                f"[Launch Options]\n{launch_clean}\n\n"
                f"[Control Panel]\n{row.get('Control Panel','')}\n\n"
                f"[Windows Optimization]\n{row.get('Windows Optimization','')}\n\n"
                f"FPS Estimate: {row.get('FPS Estimate','‚Äî')}\n"
                f"Source: {row.get('Source','')}\n"
            )
            st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã (–æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞)
if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É (–æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à)"):
    load_builds.clear()
    st.success("–ö—ç—à –æ—á–∏—â–µ–Ω. –û–±–Ω–æ–≤–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl/Cmd + R), —á—Ç–æ–±—ã –ø–æ–¥—Ç—è–Ω—É—Ç—å —Å–≤–µ–∂–∏–π builds.csv.")

st.markdown("---")

# ================== –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø –ü–û –î–†–ê–ô–í–ï–†–ê–ú ==================
st.subheader("‚ö†Ô∏è –í–∞–∂–Ω–æ –ø—Ä–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä–∞–π–≤–µ—Ä–∞")
st.markdown('<div class="note">', unsafe_allow_html=True)
st.markdown("""
**AMD (Adrenalin)**  
‚Ä¢ –ù–µ –º–µ–Ω—è–π –≥–ª–æ–±–∞–ª—å–Ω–æ ¬´–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å/–ö–∞—á–µ—Å—Ç–≤–æ¬ª –∏ Anti-Lag+, –ª—É—á—à–µ —Å–æ–∑–¥–∞–π **–ø—Ä–æ—Ñ–∏–ª—å —Ç–æ–ª—å–∫–æ –¥–ª—è CS2**.  
‚Ä¢ Radeon Chill/Boost –≤–∫–ª—é—á–∞–π –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ ‚Äî –æ–Ω–∏ –º–æ–≥—É—Ç –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –∫–∞–¥—Ä—ã –∏ –º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç.

**NVIDIA (Control Panel)**  
‚Ä¢ ¬´–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —ç–Ω–µ—Ä–≥–æ–ø–∏—Ç–∞–Ω–∏—è: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª –≤—ã—Å—Ç–∞–≤–ª—è–π **–≤ –ø—Ä–æ—Ñ–∏–ª–µ –¥–ª—è CS2**, –∞ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–æ.  
‚Ä¢ V-Sync –¥–µ—Ä–∂–∏ ¬´–í—ã–∫–ª—é—á–µ–Ω–æ¬ª (–∏–ª–∏ ¬´–£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º¬ª) ‚Äî —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å –ª–∏—à–Ω—é—é –∑–∞–¥–µ—Ä–∂–∫—É.
""")
st.markdown('</div>', unsafe_allow_html=True)

st.markdown("---")

# ================== –ü–û–î–î–ï–†–ñ–ö–ê –ü–†–û–ï–ö–¢–ê ==================
st.subheader("–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç")
st.markdown("""
<div class="pulse-wrap">
  <div class="pulse-title">–ö–∞–∂–¥—ã–π, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫ üôå</div>
  <div class="pulse-text">–¢–≤–æ—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —É—Å–∫–æ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –∏ –Ω–æ–≤—ã–µ –≥–∞–π–¥—ã.</div>
  <div style="margin-top:10px;">
    <a class="btn btn-tt" href="https://www.donationalerts.com/r/melevik" target="_blank">üí∏ DonatPay</a>
  </div>
</div>
""", unsafe_allow_html=True)

st.markdown("---")

# ================== –°–û–¶–°–ï–¢–ò (–¶–í–ï–¢–ê –ü–õ–û–©–ê–î–û–ö) ==================
st.subheader("–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ")
st.markdown("""
<div class="btn-row">
  <a class="btn btn-tt" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank">TikTok</a>
  <a class="btn btn-yt" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank">YouTube</a>
  <a class="btn btn-twitch" href="https://m.twitch.tv/melevik/home" target="_blank">Twitch</a>
</div>
""", unsafe_allow_html=True)

st.caption("–ë–∞–∑–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à—ë–ª —Å–≤–æ—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ‚Äî –Ω–∞–ø–∏—à–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –≤–∏–¥–µ–æ, –¥–æ–±–∞–≤–ª—é.")
