import pandas as pd
import streamlit as st

# =========================
# –ë–ê–ó–û–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# =========================
st.set_page_config(page_title="CS2 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä", page_icon="üéÆ", layout="wide")

# =========================
# –°–¢–ò–õ–ò (—Ç—ë–º–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ + –¥–æ–Ω–∞—Ç-–±–∞–Ω–Ω–µ—Ä —Å –∂—ë–ª—Ç—ã–º –ø–µ—Ä–µ–ª–∏–≤–æ–º)
# =========================
st.markdown("""
<style>
/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—Ç—ë–º–Ω–∞—è) */
.result-card {
  background: #0e1117;
  border: 1px solid #222632;
  border-radius: 12px;
  padding: 18px 20px;
  color: #e6e6e6;
  line-height: 1.5;
  box-shadow: 0 0 0 1px #141823 inset;
}

/* –î–æ–Ω–∞—Ç-–±–∞–Ω–Ω–µ—Ä: –º—è–≥–∫–∏–π –ø–µ—Ä–µ–ª–∏–≤–∞—é—â–∏–π—Å—è –∂—ë–ª—Ç—ã–π */
.donate-wrap {
  position: relative;
  margin: 12px 0 4px 0;
}
.donate-banner {
  background: linear-gradient(90deg, #FFDD33, #FFC300, #FFD84D, #FFB703, #FFDD33);
  background-size: 300% 300%;
  animation: gradientFlow 6s ease infinite;
  border-radius: 12px;
  padding: 14px 16px;
  color: #1a1a1a;
  font-weight: 600;
  display: flex;
  gap: 12px;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 6px 18px rgba(255, 199, 0, 0.15);
}
.donate-left {
  display: flex; flex-direction: column; gap: 6px;
}
.donate-title {
  font-size: 16px; margin: 0; padding: 0; letter-spacing: 0.2px;
}
.donate-sub {
  font-weight: 500; opacity: 0.85; margin: 0;
}

/* –ù–µ–±—Ä–æ—Å–∫–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –∑–Ω–∞—á–∫–∞ –º–æ–Ω–µ—Ç–∫–∏ */
@keyframes softPulse {
  0% { transform: scale(1); filter: drop-shadow(0 0 0 rgba(255, 183, 3, 0)); }
  50% { transform: scale(1.05); filter: drop-shadow(0 0 10px rgba(255, 183, 3, .45)); }
  100% { transform: scale(1); filter: drop-shadow(0 0 0 rgba(255, 183, 3, 0)); }
}
.coin {
  font-size: 22px; animation: softPulse 2.8s ease-in-out infinite;
}

/* –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ–ª–∏–≤ */
@keyframes gradientFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* –ö–Ω–æ–ø–∫–∞-—Å—Å—ã–ª–∫–∞ –≤–Ω—É—Ç—Ä–∏ –±–∞–Ω–Ω–µ—Ä–∞ */
.donate-btn {
  background: rgba(0,0,0,0.1);
  color: #1a1a1a;
  text-decoration: none;
  padding: 8px 14px;
  border-radius: 10px;
  font-weight: 700;
  border: 1px solid rgba(0,0,0,0.08);
}
.donate-btn:hover {
  background: rgba(0,0,0,0.18);
}

/* –°–æ—Ü-–∏–∫–æ–Ω–∫–∏ */
.soc-row {
  display:flex; gap:12px; align-items:center; flex-wrap:wrap;
}
.soc-btn {
  display:inline-flex; align-items:center; gap:8px;
  border:1px solid #2a2f3a; border-radius:10px;
  padding:8px 12px; text-decoration:none; color:#e6e6e6;
  background:#11151b;
}
.soc-btn:hover { background:#171c24; border-color:#394253; }
.soc-ico { font-size:18px; }
</style>
""", unsafe_allow_html=True)

# =========================
# –ó–ê–ì–†–£–ó–ö–ê –ë–ê–ó–´
# =========================
@st.cache_data
def load_data():
    df = pd.read_csv("builds.csv")

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç–æ–ª–±—Ü—ã –¥–æ –∫–∞–Ω–æ–Ω–∞
    def ensure_col(df, canon, variants):
        for v in variants:
            if v in df.columns:
                df[canon] = df[v]
                break
        if canon not in df.columns:
            df[canon] = ""
        return df

    df = ensure_col(df, "Game Settings", ["Game Settings", "Settings", "GameSettings"])
    df = ensure_col(df, "Launch Options", ["Launch Options", "Launch", "Params", "LaunchOptions"])
    df = ensure_col(df, "Control Panel", ["Control Panel", "ControlPanel", "Driver Settings", "Driver"])
    df = ensure_col(df, "Windows Optimization", ["Windows Optimization", "Windows Optimizations", "Windows", "Windows Opt"])
    df = ensure_col(df, "FPS Estimate", ["FPS Estimate", "FPS", "FPS Range", "Estimate"])
    df = ensure_col(df, "Source", ["Source"])

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º RAM
    if "RAM" in df.columns:
        df["RAM"] = (df["RAM"].astype(str)
            .str.replace("GB", " GB", regex=False)
            .str.replace("  ", " ", regex=False)
            .str.strip())

    return df

df = load_data()

# –ß–∏—Å—Ç–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –æ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–ª—é—á–µ–π
def clean_launch_options(s: str) -> str:
    if not isinstance(s, str):
        return ""
    tokens = s.split()
    banned = {"-novid", "-nojoy"}  # –≤ CS2 –Ω–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è
    tokens = [t for t in tokens if t not in banned]
    cleaned = " ".join(tokens)
    while "  " in cleaned:
        cleaned = cleaned.replace("  ", " ")
    return cleaned.strip()

# =========================
# UI: –®–ê–ü–ö–ê + –§–ò–õ–¨–¢–†–´
# =========================
st.title("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä CS2")
st.caption("–ü–æ–¥–±–µ—Ä–∏ –≥–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —Å–≤–æ–µ–π —Å–±–æ—Ä–∫–µ (–∏–≥—Ä–∞, –ø–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞, Windows-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏).")

colA, colB, colC, colR = st.columns([1.1, 1.1, 0.8, 0.6])
with colA:
    cpu = st.selectbox("üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU)", sorted(df["CPU"].dropna().unique()))
with colB:
    gpu = st.selectbox("üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ (GPU)", sorted(df["GPU"].dropna().unique()))
with colC:
    ram = st.selectbox("üíæ –û–ó–£ (RAM)", sorted(df["RAM"].dropna().unique()))
with colR:
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É"):
        st.rerun()

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∫–∞–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –û–ó–£ (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞)
st.info("üí° –í–∞–∂–Ω–æ: –≤ **–æ–¥–Ω–æ–∫–∞–Ω–∞–ª—å–Ω–æ–º** —Ä–µ–∂–∏–º–µ (1 –ø–ª–∞–Ω–∫–∞) FPS –æ–±—ã—á–Ω–æ –Ω–∏–∂–µ –Ω–∞ **10‚Äì25%**, —á–µ–º –≤ **–¥–≤—É—Ö–∫–∞–Ω–∞–ª—å–Ω–æ–º** (2√ó). –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å ‚Äî —Å—Ç–∞–≤—å 2 –ø–ª–∞–Ω–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–≥–æ –æ–±—ä—ë–º–∞/—á–∞—Å—Ç–æ—Ç—ã.")

# =========================
# –ü–û–ò–°–ö
# =========================
if st.button("üîç –ù–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
    result = df[(df["CPU"] == cpu) & (df["GPU"] == gpu) & (df["RAM"] == ram)]
    st.markdown("---")
    if result.empty:
        st.error("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ.")
    else:
        row = result.iloc[0].to_dict()
        launch_clean = clean_launch_options(row.get("Launch Options", ""))

        st.subheader("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        st.markdown(
            f"""
<div class="result-card">
<b>üñ• –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</b> {row.get('CPU','')}<br>
<b>üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</b> {row.get('GPU','')}<br>
<b>üíæ –û–ó–£:</b> {row.get('RAM','')}
<hr style="border: 1px solid #222632;">

<b>üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã:</b><br>
{row.get('Game Settings','')}

<br><b>üöÄ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ (–æ—á–∏—â–µ–Ω–Ω—ã–µ):</b><br>
<code>{launch_clean}</code>

<br><b>üéõ –ü–∞–Ω–µ–ª—å –¥—Ä–∞–π–≤–µ—Ä–∞ (NVIDIA/AMD):</b><br>
{row.get('Control Panel','')}

<br><b>ü™ü –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows (–ø–æ –∂–µ–ª–∞–Ω–∏—é):</b><br>
{row.get('Windows Optimization','')}

<br><b>üìä –û–∂–∏–¥–∞–µ–º—ã–π FPS:</b> {row.get('FPS Estimate','‚Äî')} &nbsp;&nbsp;
<span style="opacity:.7">(<b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {row.get('Source','')})</span>
</div>
""",
            unsafe_allow_html=True
        )

        # –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        profile_txt = (
            f"CPU: {row.get('CPU','')}\n"
            f"GPU: {row.get('GPU','')}\n"
            f"RAM: {row.get('RAM','')}\n\n"
            f"[Game Settings]\n{row.get('Game Settings','')}\n\n"
            f"[Launch Options]\n{launch_clean}\n\n"
            f"[Control Panel]\n{row.get('Control Panel','')}\n\n"
            f"[Windows Optimization]\n{row.get('Windows Optimization','')}\n\n"
            f"FPS Estimate: {row.get('FPS Estimate','‚Äî')}\n"
            f"Source: {row.get('Source','')}\n"
        )
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (.txt)", data=profile_txt, file_name="cs2_profile.txt")

# =========================
# –î–û–ë–†–û–í–û–õ–¨–ù–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê
# =========================
st.markdown('<div class="donate-wrap">', unsafe_allow_html=True)
st.markdown(
    """
    <div class="donate-banner">
      <div class="donate-left">
        <div class="donate-title">üíõ <span class="coin">ü™ô</span> –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç —Ä—É–±–ª—ë–º ‚Äî –ø–æ–ø–∞–¥–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–æ–ª–∏–∫!</div>
        <div class="donate-sub">–õ—é–±–∞—è —Å—É–º–º–∞ –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –±—ã—Å—Ç—Ä–µ–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –±–∞–∑—É –∏ –¥–æ–ø–∏–ª–∏–≤–∞—Ç—å —Ñ–∏—à–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ.</div>
      </div>
      <a class="donate-btn" href="https://www.donationalerts.com/r/melevik" target="_blank" rel="noopener noreferrer">–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å</a>
    </div>
    """,
    unsafe_allow_html=True
)
st.caption("–°–ø–∞—Å–∏–±–æ –∫–∞–∂–¥–æ–º—É –∑–∞ —É—á–∞—Å—Ç–∏–µ ‚Äî –∏–º–µ–Ω–∞ –¥–æ–Ω–∞—Ç–µ—Ä–æ–≤ –¥–æ–±–∞–≤–ª—è—é –≤ —Ç–∏—Ç—Ä—ã —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ ‚ú®")

# =========================
# –°–û–¶–°–ï–¢–ò (–∫–∞–∫ –±—ã–ª–æ)
# =========================
st.markdown("---")
st.subheader("–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è, —á—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∞–≤—Ç–æ—Ä–∞")
st.markdown(
    """
    <div class="soc-row">
      <a class="soc-btn" href="https://www.tiktok.com/@melevik?_t=ZS-8zQkTQnA4Pf&_r=1" target="_blank" rel="noopener noreferrer">
        <span class="soc-ico">üéµ</span> TikTok
      </a>
      <a class="soc-btn" href="https://youtube.com/@melevik-avlaron?si=kRXrCD7GUrVnk478" target="_blank" rel="noopener noreferrer">
        <span class="soc-ico">‚ñ∂Ô∏è</span> YouTube
      </a>
      <a class="soc-btn" href="https://m.twitch.tv/melevik/home" target="_blank" rel="noopener noreferrer">
        <span class="soc-ico">üü£</span> Twitch
      </a>
    </div>
    """,
    unsafe_allow_html=True
)

st.caption("–ë–∞–∑–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–∞ builds.csv –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ö–Ω–æ–ø–∫–∞ ¬´–û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É¬ª –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.")

